

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Jul 15 04:09:34 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.10
    24                           ; Generated 31/07/2019 GMT
    25                           ; 
    26                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F877A Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  010C                     	;# 
   112  010D                     	;# 
   113  010E                     	;# 
   114  010F                     	;# 
   115  018C                     	;# 
   116  018D                     	;# 
   117  0000                     	;# 
   118  0001                     	;# 
   119  0002                     	;# 
   120  0003                     	;# 
   121  0004                     	;# 
   122  0005                     	;# 
   123  0006                     	;# 
   124  0007                     	;# 
   125  0008                     	;# 
   126  0009                     	;# 
   127  000A                     	;# 
   128  000B                     	;# 
   129  000C                     	;# 
   130  000D                     	;# 
   131  000E                     	;# 
   132  000E                     	;# 
   133  000F                     	;# 
   134  0010                     	;# 
   135  0011                     	;# 
   136  0012                     	;# 
   137  0013                     	;# 
   138  0014                     	;# 
   139  0015                     	;# 
   140  0015                     	;# 
   141  0016                     	;# 
   142  0017                     	;# 
   143  0018                     	;# 
   144  0019                     	;# 
   145  001A                     	;# 
   146  001B                     	;# 
   147  001B                     	;# 
   148  001C                     	;# 
   149  001D                     	;# 
   150  001E                     	;# 
   151  001F                     	;# 
   152  0081                     	;# 
   153  0085                     	;# 
   154  0086                     	;# 
   155  0087                     	;# 
   156  0088                     	;# 
   157  0089                     	;# 
   158  008C                     	;# 
   159  008D                     	;# 
   160  008E                     	;# 
   161  0091                     	;# 
   162  0092                     	;# 
   163  0093                     	;# 
   164  0094                     	;# 
   165  0098                     	;# 
   166  0099                     	;# 
   167  009C                     	;# 
   168  009D                     	;# 
   169  009E                     	;# 
   170  009F                     	;# 
   171  010C                     	;# 
   172  010D                     	;# 
   173  010E                     	;# 
   174  010F                     	;# 
   175  018C                     	;# 
   176  018D                     	;# 
   177  0000                     	;# 
   178  0001                     	;# 
   179  0002                     	;# 
   180  0003                     	;# 
   181  0004                     	;# 
   182  0005                     	;# 
   183  0006                     	;# 
   184  0007                     	;# 
   185  0008                     	;# 
   186  0009                     	;# 
   187  000A                     	;# 
   188  000B                     	;# 
   189  000C                     	;# 
   190  000D                     	;# 
   191  000E                     	;# 
   192  000E                     	;# 
   193  000F                     	;# 
   194  0010                     	;# 
   195  0011                     	;# 
   196  0012                     	;# 
   197  0013                     	;# 
   198  0014                     	;# 
   199  0015                     	;# 
   200  0015                     	;# 
   201  0016                     	;# 
   202  0017                     	;# 
   203  0018                     	;# 
   204  0019                     	;# 
   205  001A                     	;# 
   206  001B                     	;# 
   207  001B                     	;# 
   208  001C                     	;# 
   209  001D                     	;# 
   210  001E                     	;# 
   211  001F                     	;# 
   212  0081                     	;# 
   213  0085                     	;# 
   214  0086                     	;# 
   215  0087                     	;# 
   216  0088                     	;# 
   217  0089                     	;# 
   218  008C                     	;# 
   219  008D                     	;# 
   220  008E                     	;# 
   221  0091                     	;# 
   222  0092                     	;# 
   223  0093                     	;# 
   224  0094                     	;# 
   225  0098                     	;# 
   226  0099                     	;# 
   227  009C                     	;# 
   228  009D                     	;# 
   229  009E                     	;# 
   230  009F                     	;# 
   231  010C                     	;# 
   232  010D                     	;# 
   233  010E                     	;# 
   234  010F                     	;# 
   235  018C                     	;# 
   236  018D                     	;# 
   237  0000                     	;# 
   238  0001                     	;# 
   239  0002                     	;# 
   240  0003                     	;# 
   241  0004                     	;# 
   242  0005                     	;# 
   243  0006                     	;# 
   244  0007                     	;# 
   245  0008                     	;# 
   246  0009                     	;# 
   247  000A                     	;# 
   248  000B                     	;# 
   249  000C                     	;# 
   250  000D                     	;# 
   251  000E                     	;# 
   252  000E                     	;# 
   253  000F                     	;# 
   254  0010                     	;# 
   255  0011                     	;# 
   256  0012                     	;# 
   257  0013                     	;# 
   258  0014                     	;# 
   259  0015                     	;# 
   260  0015                     	;# 
   261  0016                     	;# 
   262  0017                     	;# 
   263  0018                     	;# 
   264  0019                     	;# 
   265  001A                     	;# 
   266  001B                     	;# 
   267  001B                     	;# 
   268  001C                     	;# 
   269  001D                     	;# 
   270  001E                     	;# 
   271  001F                     	;# 
   272  0081                     	;# 
   273  0085                     	;# 
   274  0086                     	;# 
   275  0087                     	;# 
   276  0088                     	;# 
   277  0089                     	;# 
   278  008C                     	;# 
   279  008D                     	;# 
   280  008E                     	;# 
   281  0091                     	;# 
   282  0092                     	;# 
   283  0093                     	;# 
   284  0094                     	;# 
   285  0098                     	;# 
   286  0099                     	;# 
   287  009C                     	;# 
   288  009D                     	;# 
   289  009E                     	;# 
   290  009F                     	;# 
   291  010C                     	;# 
   292  010D                     	;# 
   293  010E                     	;# 
   294  010F                     	;# 
   295  018C                     	;# 
   296  018D                     	;# 
   297  0000                     	;# 
   298  0001                     	;# 
   299  0002                     	;# 
   300  0003                     	;# 
   301  0004                     	;# 
   302  0005                     	;# 
   303  0006                     	;# 
   304  0007                     	;# 
   305  0008                     	;# 
   306  0009                     	;# 
   307  000A                     	;# 
   308  000B                     	;# 
   309  000C                     	;# 
   310  000D                     	;# 
   311  000E                     	;# 
   312  000E                     	;# 
   313  000F                     	;# 
   314  0010                     	;# 
   315  0011                     	;# 
   316  0012                     	;# 
   317  0013                     	;# 
   318  0014                     	;# 
   319  0015                     	;# 
   320  0015                     	;# 
   321  0016                     	;# 
   322  0017                     	;# 
   323  0018                     	;# 
   324  0019                     	;# 
   325  001A                     	;# 
   326  001B                     	;# 
   327  001B                     	;# 
   328  001C                     	;# 
   329  001D                     	;# 
   330  001E                     	;# 
   331  001F                     	;# 
   332  0081                     	;# 
   333  0085                     	;# 
   334  0086                     	;# 
   335  0087                     	;# 
   336  0088                     	;# 
   337  0089                     	;# 
   338  008C                     	;# 
   339  008D                     	;# 
   340  008E                     	;# 
   341  0091                     	;# 
   342  0092                     	;# 
   343  0093                     	;# 
   344  0094                     	;# 
   345  0098                     	;# 
   346  0099                     	;# 
   347  009C                     	;# 
   348  009D                     	;# 
   349  009E                     	;# 
   350  009F                     	;# 
   351  010C                     	;# 
   352  010D                     	;# 
   353  010E                     	;# 
   354  010F                     	;# 
   355  018C                     	;# 
   356  018D                     	;# 
   357  0000                     	;# 
   358  0001                     	;# 
   359  0002                     	;# 
   360  0003                     	;# 
   361  0004                     	;# 
   362  0005                     	;# 
   363  0006                     	;# 
   364  0007                     	;# 
   365  0008                     	;# 
   366  0009                     	;# 
   367  000A                     	;# 
   368  000B                     	;# 
   369  000C                     	;# 
   370  000D                     	;# 
   371  000E                     	;# 
   372  000E                     	;# 
   373  000F                     	;# 
   374  0010                     	;# 
   375  0011                     	;# 
   376  0012                     	;# 
   377  0013                     	;# 
   378  0014                     	;# 
   379  0015                     	;# 
   380  0015                     	;# 
   381  0016                     	;# 
   382  0017                     	;# 
   383  0018                     	;# 
   384  0019                     	;# 
   385  001A                     	;# 
   386  001B                     	;# 
   387  001B                     	;# 
   388  001C                     	;# 
   389  001D                     	;# 
   390  001E                     	;# 
   391  001F                     	;# 
   392  0081                     	;# 
   393  0085                     	;# 
   394  0086                     	;# 
   395  0087                     	;# 
   396  0088                     	;# 
   397  0089                     	;# 
   398  008C                     	;# 
   399  008D                     	;# 
   400  008E                     	;# 
   401  0091                     	;# 
   402  0092                     	;# 
   403  0093                     	;# 
   404  0094                     	;# 
   405  0098                     	;# 
   406  0099                     	;# 
   407  009C                     	;# 
   408  009D                     	;# 
   409  009E                     	;# 
   410  009F                     	;# 
   411  010C                     	;# 
   412  010D                     	;# 
   413  010E                     	;# 
   414  010F                     	;# 
   415  018C                     	;# 
   416  018D                     	;# 
   417  0000                     	;# 
   418  0001                     	;# 
   419  0002                     	;# 
   420  0003                     	;# 
   421  0004                     	;# 
   422  0005                     	;# 
   423  0006                     	;# 
   424  0007                     	;# 
   425  0008                     	;# 
   426  0009                     	;# 
   427  000A                     	;# 
   428  000B                     	;# 
   429  000C                     	;# 
   430  000D                     	;# 
   431  000E                     	;# 
   432  000E                     	;# 
   433  000F                     	;# 
   434  0010                     	;# 
   435  0011                     	;# 
   436  0012                     	;# 
   437  0013                     	;# 
   438  0014                     	;# 
   439  0015                     	;# 
   440  0015                     	;# 
   441  0016                     	;# 
   442  0017                     	;# 
   443  0018                     	;# 
   444  0019                     	;# 
   445  001A                     	;# 
   446  001B                     	;# 
   447  001B                     	;# 
   448  001C                     	;# 
   449  001D                     	;# 
   450  001E                     	;# 
   451  001F                     	;# 
   452  0081                     	;# 
   453  0085                     	;# 
   454  0086                     	;# 
   455  0087                     	;# 
   456  0088                     	;# 
   457  0089                     	;# 
   458  008C                     	;# 
   459  008D                     	;# 
   460  008E                     	;# 
   461  0091                     	;# 
   462  0092                     	;# 
   463  0093                     	;# 
   464  0094                     	;# 
   465  0098                     	;# 
   466  0099                     	;# 
   467  009C                     	;# 
   468  009D                     	;# 
   469  009E                     	;# 
   470  009F                     	;# 
   471  010C                     	;# 
   472  010D                     	;# 
   473  010E                     	;# 
   474  010F                     	;# 
   475  018C                     	;# 
   476  018D                     	;# 
   477                           
   478 ;; Function _Scheduler_Task1 is unused but had its address taken
   479  0000                     
   480 ;; Function _Scheduler_Task2 is unused but had its address taken
   481  0000                     
   482 ;; Function _Scheduler_Task3 is unused but had its address taken
   483  0000                     
   484                           	psect	strings
   485  0252                     __pstrings:	
   486  0252                     stringtab:	
   487  0252                     __stringtab:	
   488  0252                     stringcode:	
   489                           ;	String table - string pointers are 1 byte each
   490                           
   491  0252                     stringdir:	
   492  0252  3002               	movlw	high stringdir
   493  0253  008A               	movwf	10
   494  0254  0804               	movf	4,w
   495  0255  0A84               	incf	4,f
   496  0256  0782               	addwf	2,f
   497  0257                     __stringbase:	
   498  0257  3400               	retlw	0
   499  0258                     __end_of__stringtab:	
   500  0258                     _Scheduler_Intitys:	
   501  0258  3400               	retlw	0
   502  0259  340A               	retlw	10
   503  025A  3400               	retlw	0
   504  025B  3400               	retlw	0
   505  025C  3400               	retlw	0
   506  025D  3400               	retlw	0
   507  025E  3432               	retlw	50
   508  025F  3400               	retlw	0
   509  0260  3400               	retlw	0
   510  0261  3400               	retlw	0
   511  0262  3400               	retlw	0
   512  0263  3464               	retlw	100
   513  0264  3400               	retlw	0
   514  0265  3400               	retlw	0
   515  0266  3400               	retlw	0
   516  0267                     __end_of_Scheduler_Intitys:	
   517  000B                     _INTCON	set	11
   518  0001                     _TMR0	set	1
   519  0013                     _SSPBUF	set	19
   520  0014                     _SSPCON	set	20
   521  001E                     _ADRESH	set	30
   522  001F                     _ADCON0	set	31
   523  0009                     _PORTE	set	9
   524  0008                     _PORTD	set	8
   525  0007                     _PORTC	set	7
   526  0006                     _PORTB	set	6
   527  0005                     _PORTA	set	5
   528  0081                     _OPTION_REG	set	129
   529  0091                     _SSPCON2	set	145
   530  0094                     _SSPSTAT	set	148
   531  0093                     _SSPADD	set	147
   532  009E                     _ADRESL	set	158
   533  009F                     _ADCON1	set	159
   534  0089                     _TRISE	set	137
   535  0088                     _TRISD	set	136
   536  0087                     _TRISC	set	135
   537  0086                     _TRISB	set	134
   538  0085                     _TRISA	set	133
   539                           
   540                           ; #config settings
   541  0000                     
   542                           	psect	cinit
   543  0015                     start_initialization:	
   544  0015                     __initialization:	
   545                           
   546                           ; Clear objects allocated to BANK0
   547  0015  1283               	bcf	3,5	;RP0=0, select bank0
   548  0016  1303               	bcf	3,6	;RP1=0, select bank0
   549  0017  01C3               	clrf	__pbssBANK0& (0+127)
   550  0018  01C4               	clrf	(__pbssBANK0+1)& (0+127)
   551  0019  01C5               	clrf	(__pbssBANK0+2)& (0+127)
   552  001A  01C6               	clrf	(__pbssBANK0+3)& (0+127)
   553  001B  01C7               	clrf	(__pbssBANK0+4)& (0+127)
   554  001C  01C8               	clrf	(__pbssBANK0+5)& (0+127)
   555  001D  01C9               	clrf	(__pbssBANK0+6)& (0+127)
   556  001E  01CA               	clrf	(__pbssBANK0+7)& (0+127)
   557  001F  01CB               	clrf	(__pbssBANK0+8)& (0+127)
   558  0020  01CC               	clrf	(__pbssBANK0+9)& (0+127)
   559  0021                     end_of_initialization:	
   560                           ;End of C runtime variable initialization code
   561                           
   562  0021                     __end_of__initialization:	
   563  0021  0183               	clrf	3
   564  0022  120A  118A  29EC   	ljmp	_main	;jump to C main() function
   565                           
   566                           	psect	bssBANK0
   567  0043                     __pbssBANK0:	
   568  0043                     _timer_tick:	
   569  0043                     	ds	4
   570  0047                     main@F931:	
   571  0047                     	ds	3
   572  004A                     _Scheduler_ActivationFlags:	
   573  004A                     	ds	3
   574                           
   575                           	psect	cstackCOMMON
   576  0070                     __pcstackCOMMON:	
   577  0070                     ?_TWI_init:	
   578  0070                     ?_TWI_start:	
   579                           ; 1 bytes @ 0x0
   580                           
   581  0070                     ?_TWI_write:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  0070                     ?_TWI_stop:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0070                     ?_main:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0070                     ?_Timer_callback:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  0070                     ?_ISR:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0070                     ?___bmul:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0070                     ___bmul@multiplicand:	
   600                           ; 1 bytes @ 0x0
   601                           
   602                           
   603                           ; 1 bytes @ 0x0
   604  0070                     	ds	1
   605  0071                     ??___bmul:	
   606                           
   607                           ; 1 bytes @ 0x1
   608  0071                     	ds	1
   609  0072                     ___bmul@product:	
   610                           
   611                           ; 1 bytes @ 0x2
   612  0072                     	ds	1
   613  0073                     ___bmul@multiplier:	
   614                           
   615                           ; 1 bytes @ 0x3
   616  0073                     	ds	1
   617  0074                     ?___lldiv:	
   618  0074                     ___lldiv@divisor:	
   619                           ; 4 bytes @ 0x4
   620                           
   621                           
   622                           ; 4 bytes @ 0x4
   623  0074                     	ds	4
   624  0078                     ___lldiv@dividend:	
   625                           
   626                           ; 4 bytes @ 0x8
   627  0078                     	ds	4
   628  007C                     ??___lldiv:	
   629                           
   630                           ; 1 bytes @ 0xC
   631  007C                     	ds	1
   632  007D                     ??___llmod:	
   633                           
   634                           ; 1 bytes @ 0xD
   635  007D                     	ds	1
   636  007E                     ??_Timer_callback:	
   637                           
   638                           	psect	cstackBANK0
   639  0020                     __pcstackBANK0:	
   640                           ; 1 bytes @ 0xE
   641                           
   642  0020                     ___lldiv@quotient:	
   643                           
   644                           ; 4 bytes @ 0x0
   645  0020                     	ds	4
   646  0024                     ___lldiv@counter:	
   647                           
   648                           ; 1 bytes @ 0x4
   649  0024                     	ds	1
   650  0025                     ?___llmod:	
   651  0025                     ___llmod@divisor:	
   652                           ; 4 bytes @ 0x5
   653                           
   654                           
   655                           ; 4 bytes @ 0x5
   656  0025                     	ds	4
   657  0029                     ___llmod@dividend:	
   658                           
   659                           ; 4 bytes @ 0x9
   660  0029                     	ds	4
   661  002D                     ___llmod@counter:	
   662                           
   663                           ; 1 bytes @ 0xD
   664  002D                     	ds	1
   665  002E                     ?_Scheduler_ActivateTask:	
   666  002E                     Scheduler_ActivateTask@SystemTick:	
   667                           ; 1 bytes @ 0xE
   668                           
   669                           
   670                           ; 4 bytes @ 0xE
   671  002E                     	ds	4
   672  0032                     ??_Scheduler_ActivateTask:	
   673                           
   674                           ; 1 bytes @ 0x12
   675  0032                     	ds	1
   676  0033                     Scheduler_ActivateTask@SystemTick_Loc:	
   677                           
   678                           ; 4 bytes @ 0x13
   679  0033                     	ds	4
   680  0037                     Scheduler_ActivateTask@IntityIndex:	
   681                           
   682                           ; 1 bytes @ 0x17
   683  0037                     	ds	1
   684  0038                     ??_ISR:	
   685                           
   686                           ; 1 bytes @ 0x18
   687  0038                     	ds	5
   688  003D                     ??_TWI_init:	
   689  003D                     ??_TWI_start:	
   690                           ; 1 bytes @ 0x1D
   691                           
   692  003D                     ??_TWI_write:	
   693                           ; 1 bytes @ 0x1D
   694                           
   695  003D                     ??_TWI_stop:	
   696                           ; 1 bytes @ 0x1D
   697                           
   698  003D                     TWI_write@data:	
   699                           ; 1 bytes @ 0x1D
   700                           
   701                           
   702                           ; 1 bytes @ 0x1D
   703  003D                     	ds	2
   704  003F                     TWI_init@twi_init_cfg:	
   705                           
   706                           ; 1 bytes @ 0x1F
   707  003F                     	ds	1
   708  0040                     ??_main:	
   709  0040                     main@twi_init_cfg:	
   710                           ; 1 bytes @ 0x20
   711                           
   712                           
   713                           ; 3 bytes @ 0x20
   714  0040                     	ds	3
   715                           
   716                           	psect	maintext
   717  01EC                     __pmaintext:	
   718 ;;
   719 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   720 ;;
   721 ;; *************** function _main *****************
   722 ;; Defined at:
   723 ;;		line 23 in file "main.c"
   724 ;; Parameters:    Size  Location     Type
   725 ;;		None
   726 ;; Auto vars:     Size  Location     Type
   727 ;;  twi_init_cfg    3   32[BANK0 ] struct .
   728 ;; Return value:  Size  Location     Type
   729 ;;                  1    wreg      void 
   730 ;; Registers used:
   731 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   732 ;; Tracked objects:
   733 ;;		On entry : B00/0
   734 ;;		On exit  : 0/0
   735 ;;		Unchanged: 0/0
   736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   737 ;;      Params:         0       0       0       0       0
   738 ;;      Locals:         0       3       0       0       0
   739 ;;      Temps:          0       0       0       0       0
   740 ;;      Totals:         0       3       0       0       0
   741 ;;Total ram usage:        3 bytes
   742 ;; Hardware stack levels required when called:    5
   743 ;; This function calls:
   744 ;;		_TWI_init
   745 ;;		_TWI_start
   746 ;;		_TWI_stop
   747 ;;		_TWI_write
   748 ;; This function is called by:
   749 ;;		Startup code after reset
   750 ;; This function uses a non-reentrant model
   751 ;;
   752                           
   753                           
   754                           ;psect for function _main
   755  01EC                     _main:	
   756  01EC                     l1716:	
   757                           ;incstack = 0
   758                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   759                           
   760  01EC  1283               	bcf	3,5	;RP0=0, select bank0
   761  01ED  1303               	bcf	3,6	;RP1=0, select bank0
   762  01EE  0847               	movf	main@F931,w
   763  01EF  00C0               	movwf	main@twi_init_cfg
   764  01F0  0848               	movf	main@F931+1,w
   765  01F1  00C1               	movwf	main@twi_init_cfg+1
   766  01F2  0849               	movf	main@F931+2,w
   767  01F3  00C2               	movwf	main@twi_init_cfg+2
   768  01F4                     l1718:	
   769  01F4  01C0               	clrf	main@twi_init_cfg
   770  01F5                     l1720:	
   771  01F5  01C1               	clrf	main@twi_init_cfg+1
   772  01F6                     l1722:	
   773  01F6  01C2               	clrf	main@twi_init_cfg+2
   774  01F7  0AC2               	incf	main@twi_init_cfg+2,f
   775  01F8                     l1724:	
   776  01F8  3040               	movlw	(low (main@twi_init_cfg| 0))& (0+255)
   777  01F9  120A  118A  2025  120A  118A  	fcall	_TWI_init
   778  01FE                     l1726:	
   779                           
   780                           ;main.c: 47:         TWI_start();
   781  01FE  120A  118A  229E  120A  118A  	fcall	_TWI_start
   782  0203                     l1728:	
   783                           
   784                           ;main.c: 48:         TWI_write(0x02);
   785  0203  3002               	movlw	2
   786  0204  120A  118A  227C  120A  118A  	fcall	_TWI_write
   787  0209                     l1730:	
   788                           
   789                           ;main.c: 49:         TWI_write('a');
   790  0209  3061               	movlw	97
   791  020A  120A  118A  227C  120A  118A  	fcall	_TWI_write
   792  020F                     l1732:	
   793                           
   794                           ;main.c: 50:         TWI_stop();
   795  020F  120A  118A  2290  120A  118A  	fcall	_TWI_stop
   796  0214  29FE               	goto	l1726
   797  0215  120A  118A  2812   	ljmp	start
   798  0218                     __end_of_main:	
   799                           
   800                           	psect	text1
   801  027C                     __ptext1:	
   802 ;; *************** function _TWI_write *****************
   803 ;; Defined at:
   804 ;;		line 101 in file "I2c.c"
   805 ;; Parameters:    Size  Location     Type
   806 ;;  data            1    wreg     unsigned char 
   807 ;; Auto vars:     Size  Location     Type
   808 ;;  data            1   29[BANK0 ] unsigned char 
   809 ;; Return value:  Size  Location     Type
   810 ;;                  1    wreg      void 
   811 ;; Registers used:
   812 ;;		wreg, status,2
   813 ;; Tracked objects:
   814 ;;		On entry : 0/0
   815 ;;		On exit  : 0/0
   816 ;;		Unchanged: 0/0
   817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   818 ;;      Params:         0       0       0       0       0
   819 ;;      Locals:         0       1       0       0       0
   820 ;;      Temps:          0       0       0       0       0
   821 ;;      Totals:         0       1       0       0       0
   822 ;;Total ram usage:        1 bytes
   823 ;; Hardware stack levels used:    1
   824 ;; Hardware stack levels required when called:    4
   825 ;; This function calls:
   826 ;;		Nothing
   827 ;; This function is called by:
   828 ;;		_main
   829 ;; This function uses a non-reentrant model
   830 ;;
   831                           
   832                           
   833                           ;psect for function _TWI_write
   834  027C                     _TWI_write:	
   835                           
   836                           ;incstack = 0
   837                           ; Regs used in _TWI_write: [wreg+status,2]
   838                           ;TWI_write@data stored from wreg
   839  027C  1283               	bcf	3,5	;RP0=0, select bank0
   840  027D  1303               	bcf	3,6	;RP1=0, select bank0
   841  027E  00BD               	movwf	TWI_write@data
   842  027F                     l1698:	
   843  027F                     l1700:	
   844                           ;I2c.c: 101: void TWI_write(uint8_t data);I2c.c: 102: {;I2c.c: 103:   while ( ((SSPCON2 
      +                          & 0x1F) || (SSPSTAT & 0x04)) ) {}
   845                           
   846  027F  1683               	bsf	3,5	;RP0=1, select bank1
   847  0280  1303               	bcf	3,6	;RP1=0, select bank1
   848  0281  0811               	movf	17,w	;volatile
   849  0282  391F               	andlw	31
   850  0283  1D03               	btfss	3,2
   851  0284  2A86               	goto	u951
   852  0285  2A87               	goto	u950
   853  0286                     u951:	
   854  0286  2A7F               	goto	l1700
   855  0287                     u950:	
   856  0287                     l1702:	
   857  0287  1914               	btfsc	20,2	;volatile
   858  0288  2A8A               	goto	u961
   859  0289  2A8B               	goto	u960
   860  028A                     u961:	
   861  028A  2A7F               	goto	l1700
   862  028B                     u960:	
   863  028B                     l1704:	
   864                           
   865                           ;I2c.c: 104:    SSPBUF = data;
   866  028B  1283               	bcf	3,5	;RP0=0, select bank0
   867  028C  1303               	bcf	3,6	;RP1=0, select bank0
   868  028D  083D               	movf	TWI_write@data,w
   869  028E  0093               	movwf	19	;volatile
   870  028F                     l233:	
   871  028F  0008               	return
   872  0290                     __end_of_TWI_write:	
   873                           
   874                           	psect	text2
   875  0290                     __ptext2:	
   876 ;; *************** function _TWI_stop *****************
   877 ;; Defined at:
   878 ;;		line 94 in file "I2c.c"
   879 ;; Parameters:    Size  Location     Type
   880 ;;		None
   881 ;; Auto vars:     Size  Location     Type
   882 ;;		None
   883 ;; Return value:  Size  Location     Type
   884 ;;                  1    wreg      void 
   885 ;; Registers used:
   886 ;;		wreg, status,2
   887 ;; Tracked objects:
   888 ;;		On entry : 0/0
   889 ;;		On exit  : 0/0
   890 ;;		Unchanged: 0/0
   891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   892 ;;      Params:         0       0       0       0       0
   893 ;;      Locals:         0       0       0       0       0
   894 ;;      Temps:          0       0       0       0       0
   895 ;;      Totals:         0       0       0       0       0
   896 ;;Total ram usage:        0 bytes
   897 ;; Hardware stack levels used:    1
   898 ;; Hardware stack levels required when called:    4
   899 ;; This function calls:
   900 ;;		Nothing
   901 ;; This function is called by:
   902 ;;		_main
   903 ;; This function uses a non-reentrant model
   904 ;;
   905                           
   906                           
   907                           ;psect for function _TWI_stop
   908  0290                     _TWI_stop:	
   909  0290                     l1706:	
   910                           ;incstack = 0
   911                           ; Regs used in _TWI_stop: [wreg+status,2]
   912                           
   913  0290                     l1708:	
   914                           ;I2c.c: 96:   while ( ((SSPCON2 & 0x1F) || (SSPSTAT & 0x04)) ) {}
   915                           
   916  0290  1683               	bsf	3,5	;RP0=1, select bank1
   917  0291  1303               	bcf	3,6	;RP1=0, select bank1
   918  0292  0811               	movf	17,w	;volatile
   919  0293  391F               	andlw	31
   920  0294  1D03               	btfss	3,2
   921  0295  2A97               	goto	u971
   922  0296  2A98               	goto	u970
   923  0297                     u971:	
   924  0297  2A90               	goto	l1708
   925  0298                     u970:	
   926  0298                     l1710:	
   927  0298  1914               	btfsc	20,2	;volatile
   928  0299  2A9B               	goto	u981
   929  029A  2A9C               	goto	u980
   930  029B                     u981:	
   931  029B  2A90               	goto	l1708
   932  029C                     u980:	
   933  029C                     l226:	
   934                           
   935                           ;I2c.c: 97:     SSPCON2 |=(1 << 2);
   936  029C  1511               	bsf	17,2	;volatile
   937  029D                     l227:	
   938  029D  0008               	return
   939  029E                     __end_of_TWI_stop:	
   940                           
   941                           	psect	text3
   942  029E                     __ptext3:	
   943 ;; *************** function _TWI_start *****************
   944 ;; Defined at:
   945 ;;		line 79 in file "I2c.c"
   946 ;; Parameters:    Size  Location     Type
   947 ;;		None
   948 ;; Auto vars:     Size  Location     Type
   949 ;;		None
   950 ;; Return value:  Size  Location     Type
   951 ;;                  1    wreg      void 
   952 ;; Registers used:
   953 ;;		wreg, status,2
   954 ;; Tracked objects:
   955 ;;		On entry : 0/0
   956 ;;		On exit  : 0/0
   957 ;;		Unchanged: 0/0
   958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   959 ;;      Params:         0       0       0       0       0
   960 ;;      Locals:         0       0       0       0       0
   961 ;;      Temps:          0       0       0       0       0
   962 ;;      Totals:         0       0       0       0       0
   963 ;;Total ram usage:        0 bytes
   964 ;; Hardware stack levels used:    1
   965 ;; Hardware stack levels required when called:    4
   966 ;; This function calls:
   967 ;;		Nothing
   968 ;; This function is called by:
   969 ;;		_main
   970 ;; This function uses a non-reentrant model
   971 ;;
   972                           
   973                           
   974                           ;psect for function _TWI_start
   975  029E                     _TWI_start:	
   976  029E                     l1692:	
   977                           ;incstack = 0
   978                           ; Regs used in _TWI_start: [wreg+status,2]
   979                           
   980  029E                     l1694:	
   981                           ;I2c.c: 82:   while ( ((SSPCON2 & 0x1F) || (SSPSTAT & 0x04)) ) {}
   982                           
   983  029E  1683               	bsf	3,5	;RP0=1, select bank1
   984  029F  1303               	bcf	3,6	;RP1=0, select bank1
   985  02A0  0811               	movf	17,w	;volatile
   986  02A1  391F               	andlw	31
   987  02A2  1D03               	btfss	3,2
   988  02A3  2AA5               	goto	u931
   989  02A4  2AA6               	goto	u930
   990  02A5                     u931:	
   991  02A5  2A9E               	goto	l1694
   992  02A6                     u930:	
   993  02A6                     l1696:	
   994  02A6  1914               	btfsc	20,2	;volatile
   995  02A7  2AA9               	goto	u941
   996  02A8  2AAA               	goto	u940
   997  02A9                     u941:	
   998  02A9  2A9E               	goto	l1694
   999  02AA                     u940:	
  1000  02AA                     l214:	
  1001                           
  1002                           ;I2c.c: 83:     SSPCON2 |=(1 << 0);
  1003  02AA  1411               	bsf	17,0	;volatile
  1004  02AB                     l215:	
  1005  02AB  0008               	return
  1006  02AC                     __end_of_TWI_start:	
  1007                           
  1008                           	psect	text4
  1009  0025                     __ptext4:	
  1010 ;; *************** function _TWI_init *****************
  1011 ;; Defined at:
  1012 ;;		line 13 in file "I2c.c"
  1013 ;; Parameters:    Size  Location     Type
  1014 ;;  twi_init_cfg    1    wreg     PTR struct .
  1015 ;;		 -> main@twi_init_cfg(3), 
  1016 ;; Auto vars:     Size  Location     Type
  1017 ;;  twi_init_cfg    1   31[BANK0 ] PTR struct .
  1018 ;;		 -> main@twi_init_cfg(3), 
  1019 ;; Return value:  Size  Location     Type
  1020 ;;                  1    wreg      void 
  1021 ;; Registers used:
  1022 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1023 ;; Tracked objects:
  1024 ;;		On entry : 0/0
  1025 ;;		On exit  : 0/0
  1026 ;;		Unchanged: 0/0
  1027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1028 ;;      Params:         0       0       0       0       0
  1029 ;;      Locals:         0       1       0       0       0
  1030 ;;      Temps:          0       2       0       0       0
  1031 ;;      Totals:         0       3       0       0       0
  1032 ;;Total ram usage:        3 bytes
  1033 ;; Hardware stack levels used:    1
  1034 ;; Hardware stack levels required when called:    4
  1035 ;; This function calls:
  1036 ;;		Nothing
  1037 ;; This function is called by:
  1038 ;;		_main
  1039 ;; This function uses a non-reentrant model
  1040 ;;
  1041                           
  1042                           
  1043                           ;psect for function _TWI_init
  1044  0025                     _TWI_init:	
  1045                           
  1046                           ;incstack = 0
  1047                           ; Regs used in _TWI_init: [wreg-fsr0h+status,2+status,0]
  1048                           ;TWI_init@twi_init_cfg stored from wreg
  1049  0025  1283               	bcf	3,5	;RP0=0, select bank0
  1050  0026  1303               	bcf	3,6	;RP1=0, select bank0
  1051  0027  00BF               	movwf	TWI_init@twi_init_cfg
  1052  0028                     l1644:	
  1053                           
  1054                           ;I2c.c: 13: void TWI_init(twi_init_cfg_t* twi_init_cfg);I2c.c: 14: {;I2c.c: 15:     if(t
      +                          wi_init_cfg != (0))
  1055  0028  083F               	movf	TWI_init@twi_init_cfg,w
  1056  0029  1903               	btfsc	3,2
  1057  002A  282C               	goto	u901
  1058  002B  282D               	goto	u900
  1059  002C                     u901:	
  1060  002C  28BF               	goto	l209
  1061  002D                     u900:	
  1062  002D                     l1646:	
  1063                           
  1064                           ;I2c.c: 16:     {;I2c.c: 18:          SSPADD = (((8000000)/4000)/(100)) - 1;
  1065  002D  3013               	movlw	19
  1066  002E  1683               	bsf	3,5	;RP0=1, select bank1
  1067  002F  1303               	bcf	3,6	;RP1=0, select bank1
  1068  0030  0093               	movwf	19	;volatile
  1069  0031                     l1648:	
  1070                           
  1071                           ;I2c.c: 19:          TRISC |=(1 << 3)|(1 << 4);
  1072  0031  3018               	movlw	24
  1073  0032  1283               	bcf	3,5	;RP0=0, select bank0
  1074  0033  1303               	bcf	3,6	;RP1=0, select bank0
  1075  0034  00BD               	movwf	??_TWI_init
  1076  0035  083D               	movf	??_TWI_init,w
  1077  0036  1683               	bsf	3,5	;RP0=1, select bank1
  1078  0037  1303               	bcf	3,6	;RP1=0, select bank1
  1079  0038  0487               	iorwf	7,f	;volatile
  1080                           
  1081                           ;I2c.c: 20:         switch(twi_init_cfg -> bit_rate)
  1082  0039  2845               	goto	l1654
  1083  003A                     l192:	
  1084                           ;I2c.c: 21:         {;I2c.c: 22:             case standard_speed:
  1085                           
  1086                           
  1087                           ;I2c.c: 23:                 SSPSTAT |=(1 << 7);
  1088  003A  1683               	bsf	3,5	;RP0=1, select bank1
  1089  003B  1303               	bcf	3,6	;RP1=0, select bank1
  1090  003C  1794               	bsf	20,7	;volatile
  1091                           
  1092                           ;I2c.c: 24:                 break;
  1093  003D  2889               	goto	l1670
  1094  003E                     l1650:	
  1095                           
  1096                           ;I2c.c: 26:                 SSPSTAT &=~(1 << 7);
  1097  003E  307F               	movlw	127
  1098  003F  00BD               	movwf	??_TWI_init
  1099  0040  083D               	movf	??_TWI_init,w
  1100  0041  1683               	bsf	3,5	;RP0=1, select bank1
  1101  0042  1303               	bcf	3,6	;RP1=0, select bank1
  1102  0043  0594               	andwf	20,f	;volatile
  1103                           
  1104                           ;I2c.c: 27:                 break;
  1105  0044  2889               	goto	l1670
  1106  0045                     l1654:	
  1107  0045  1283               	bcf	3,5	;RP0=0, select bank0
  1108  0046  1303               	bcf	3,6	;RP1=0, select bank0
  1109  0047  083F               	movf	TWI_init@twi_init_cfg,w
  1110  0048  0084               	movwf	4
  1111  0049  1383               	bcf	3,7	;select IRP bank0
  1112  004A  0800               	movf	0,w
  1113  004B  00BD               	movwf	??_TWI_init
  1114  004C  01BE               	clrf	??_TWI_init+1
  1115                           
  1116                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1117                           ; Switch size 1, requested type "simple"
  1118                           ; Number of cases is 1, Range of values is 0 to 0
  1119                           ; switch strategies available:
  1120                           ; Name         Instructions Cycles
  1121                           ; simple_byte            4     3 (average)
  1122                           ; direct_byte           11     8 (fixed)
  1123                           ; jumptable            260     6 (fixed)
  1124                           ;	Chosen strategy is simple_byte
  1125  004D  083E               	movf	??_TWI_init+1,w
  1126  004E  3A00               	xorlw	0	; case 0
  1127  004F  1903               	skipnz
  1128  0050  2852               	goto	l1828
  1129  0051  2889               	goto	l1670
  1130  0052                     l1828:	
  1131                           
  1132                           ; Switch size 1, requested type "simple"
  1133                           ; Number of cases is 2, Range of values is 0 to 1
  1134                           ; switch strategies available:
  1135                           ; Name         Instructions Cycles
  1136                           ; simple_byte            7     4 (average)
  1137                           ; direct_byte           14     8 (fixed)
  1138                           ; jumptable            260     6 (fixed)
  1139                           ;	Chosen strategy is simple_byte
  1140  0052  083D               	movf	??_TWI_init,w
  1141  0053  3A00               	xorlw	0	; case 0
  1142  0054  1903               	skipnz
  1143  0055  283A               	goto	l192
  1144  0056  3A01               	xorlw	1	; case 1
  1145  0057  1903               	skipnz
  1146  0058  283E               	goto	l1650
  1147  0059  2889               	goto	l1670
  1148  005A                     l197:	
  1149                           ;I2c.c: 34:         {;I2c.c: 35:             case master_mode:
  1150                           
  1151                           
  1152                           ;I2c.c: 36:                SSPCON |=(1 << 3);
  1153  005A  1594               	bsf	20,3	;volatile
  1154  005B                     l1656:	
  1155                           
  1156                           ;I2c.c: 37:                SSPCON &=~((1 << 0)|(1 << 1)|(1 << 2));
  1157  005B  30F8               	movlw	248
  1158  005C  00BD               	movwf	??_TWI_init
  1159  005D  083D               	movf	??_TWI_init,w
  1160  005E  0594               	andwf	20,f	;volatile
  1161                           
  1162                           ;I2c.c: 39:                 break;
  1163  005F  28A8               	goto	l1672
  1164  0060                     l1658:	
  1165                           
  1166                           ;I2c.c: 41:                 SSPCON |=(1 << 1)|(1 << 2);
  1167  0060  3006               	movlw	6
  1168  0061  00BD               	movwf	??_TWI_init
  1169  0062  083D               	movf	??_TWI_init,w
  1170  0063  0494               	iorwf	20,f	;volatile
  1171                           
  1172                           ;I2c.c: 42:                 SSPCON &=~((1 << 0)|(1 << 3));
  1173  0064  30F6               	movlw	246
  1174  0065  00BD               	movwf	??_TWI_init
  1175  0066  083D               	movf	??_TWI_init,w
  1176  0067  0594               	andwf	20,f	;volatile
  1177                           
  1178                           ;I2c.c: 43:                 break;
  1179  0068  28A8               	goto	l1672
  1180  0069                     l1660:	
  1181                           
  1182                           ;I2c.c: 45:                 SSPCON |=(1 << 0)|(1 << 1)|(1 << 2);
  1183  0069  3007               	movlw	7
  1184  006A  00BD               	movwf	??_TWI_init
  1185  006B  083D               	movf	??_TWI_init,w
  1186  006C  0494               	iorwf	20,f	;volatile
  1187                           
  1188                           ;I2c.c: 46:                 SSPCON &=~(1 << 3);
  1189  006D  30F7               	movlw	247
  1190  006E  00BD               	movwf	??_TWI_init
  1191  006F  083D               	movf	??_TWI_init,w
  1192  0070  0594               	andwf	20,f	;volatile
  1193                           
  1194                           ;I2c.c: 47:                 break;
  1195  0071  28A8               	goto	l1672
  1196  0072                     l1662:	
  1197                           
  1198                           ;I2c.c: 49:                 SSPCON |=(1 << 1)|(1 << 2)|(1 << 3);
  1199  0072  300E               	movlw	14
  1200  0073  00BD               	movwf	??_TWI_init
  1201  0074  083D               	movf	??_TWI_init,w
  1202  0075  0494               	iorwf	20,f	;volatile
  1203                           
  1204                           ;I2c.c: 50:                 SSPCON &=~(1 << 0);
  1205  0076  30FE               	movlw	254
  1206  0077  00BD               	movwf	??_TWI_init
  1207  0078  083D               	movf	??_TWI_init,w
  1208  0079  0594               	andwf	20,f	;volatile
  1209                           
  1210                           ;I2c.c: 51:                 break;
  1211  007A  28A8               	goto	l1672
  1212  007B                     l1664:	
  1213                           
  1214                           ;I2c.c: 53:                 SSPCON |=(1 << 0)|(1 << 1)|(1 << 2)|(1 << 3);
  1215  007B  300F               	movlw	15
  1216  007C  00BD               	movwf	??_TWI_init
  1217  007D  083D               	movf	??_TWI_init,w
  1218  007E  0494               	iorwf	20,f	;volatile
  1219                           
  1220                           ;I2c.c: 54:                 break;
  1221  007F  28A8               	goto	l1672
  1222  0080                     l1666:	
  1223                           
  1224                           ;I2c.c: 56:                 SSPCON |=(1 << 0)|(1 << 1)|(1 << 3);
  1225  0080  300B               	movlw	11
  1226  0081  00BD               	movwf	??_TWI_init
  1227  0082  083D               	movf	??_TWI_init,w
  1228  0083  0494               	iorwf	20,f	;volatile
  1229                           
  1230                           ;I2c.c: 57:                 SSPCON &=~(1 << 2);
  1231  0084  30FB               	movlw	251
  1232  0085  00BD               	movwf	??_TWI_init
  1233  0086  083D               	movf	??_TWI_init,w
  1234  0087  0594               	andwf	20,f	;volatile
  1235                           
  1236                           ;I2c.c: 58:                 break;
  1237  0088  28A8               	goto	l1672
  1238  0089                     l1670:	
  1239  0089  1283               	bcf	3,5	;RP0=0, select bank0
  1240  008A  0A3F               	incf	TWI_init@twi_init_cfg,w
  1241  008B  0084               	movwf	4
  1242  008C  0800               	movf	0,w
  1243  008D  00BD               	movwf	??_TWI_init
  1244  008E  01BE               	clrf	??_TWI_init+1
  1245                           
  1246                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1247                           ; Switch size 1, requested type "simple"
  1248                           ; Number of cases is 1, Range of values is 0 to 0
  1249                           ; switch strategies available:
  1250                           ; Name         Instructions Cycles
  1251                           ; simple_byte            4     3 (average)
  1252                           ; direct_byte           11     8 (fixed)
  1253                           ; jumptable            260     6 (fixed)
  1254                           ;	Chosen strategy is simple_byte
  1255  008F  083E               	movf	??_TWI_init+1,w
  1256  0090  3A00               	xorlw	0	; case 0
  1257  0091  1903               	skipnz
  1258  0092  2894               	goto	l1830
  1259  0093  28A8               	goto	l1672
  1260  0094                     l1830:	
  1261                           
  1262                           ; Switch size 1, requested type "simple"
  1263                           ; Number of cases is 6, Range of values is 0 to 5
  1264                           ; switch strategies available:
  1265                           ; Name         Instructions Cycles
  1266                           ; simple_byte           19    10 (average)
  1267                           ; direct_byte           26     8 (fixed)
  1268                           ; jumptable            260     6 (fixed)
  1269                           ;	Chosen strategy is simple_byte
  1270  0094  083D               	movf	??_TWI_init,w
  1271  0095  3A00               	xorlw	0	; case 0
  1272  0096  1903               	skipnz
  1273  0097  285A               	goto	l197
  1274  0098  3A01               	xorlw	1	; case 1
  1275  0099  1903               	skipnz
  1276  009A  2860               	goto	l1658
  1277  009B  3A03               	xorlw	3	; case 2
  1278  009C  1903               	skipnz
  1279  009D  2869               	goto	l1660
  1280  009E  3A01               	xorlw	1	; case 3
  1281  009F  1903               	skipnz
  1282  00A0  2872               	goto	l1662
  1283  00A1  3A07               	xorlw	7	; case 4
  1284  00A2  1903               	skipnz
  1285  00A3  287B               	goto	l1664
  1286  00A4  3A01               	xorlw	1	; case 5
  1287  00A5  1903               	skipnz
  1288  00A6  2880               	goto	l1666
  1289  00A7  28A8               	goto	l1672
  1290  00A8                     l1672:	
  1291                           
  1292                           ;I2c.c: 63:         if(twi_init_cfg -> enable == (1))
  1293  00A8  083F               	movf	TWI_init@twi_init_cfg,w
  1294  00A9  3E02               	addlw	2
  1295  00AA  0084               	movwf	4
  1296  00AB  0300               	decf	0,w
  1297  00AC  1D03               	btfss	3,2
  1298  00AD  28AF               	goto	u911
  1299  00AE  28B0               	goto	u910
  1300  00AF                     u911:	
  1301  00AF  28B2               	goto	l1676
  1302  00B0                     u910:	
  1303  00B0                     l1674:	
  1304                           
  1305                           ;I2c.c: 64:         {;I2c.c: 65:             SSPCON |= (1 << 5);
  1306  00B0  1694               	bsf	20,5	;volatile
  1307                           
  1308                           ;I2c.c: 66:         }
  1309  00B1  28BF               	goto	l209
  1310  00B2                     l1676:	
  1311  00B2  083F               	movf	TWI_init@twi_init_cfg,w
  1312  00B3  3E02               	addlw	2
  1313  00B4  0084               	movwf	4
  1314  00B5  0800               	movf	0,w
  1315  00B6  1D03               	btfss	3,2
  1316  00B7  28B9               	goto	u921
  1317  00B8  28BA               	goto	u920
  1318  00B9                     u921:	
  1319  00B9  28BF               	goto	l206
  1320  00BA                     u920:	
  1321  00BA                     l1678:	
  1322                           
  1323                           ;I2c.c: 68:         {;I2c.c: 69:             SSPCON &= ~(1 << 5);
  1324  00BA  30DF               	movlw	223
  1325  00BB  00BD               	movwf	??_TWI_init
  1326  00BC  083D               	movf	??_TWI_init,w
  1327  00BD  0594               	andwf	20,f	;volatile
  1328                           
  1329                           ;I2c.c: 70:         }
  1330  00BE  28BF               	goto	l209
  1331  00BF                     l206:	
  1332  00BF                     l209:	
  1333  00BF  0008               	return
  1334  00C0                     __end_of_TWI_init:	
  1335                           
  1336                           	psect	text5
  1337  0236                     __ptext5:	
  1338 ;; *************** function _ISR *****************
  1339 ;; Defined at:
  1340 ;;		line 10 in file "interrupt.c"
  1341 ;; Parameters:    Size  Location     Type
  1342 ;;		None
  1343 ;; Auto vars:     Size  Location     Type
  1344 ;;		None
  1345 ;; Return value:  Size  Location     Type
  1346 ;;                  1    wreg      void 
  1347 ;; Registers used:
  1348 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1349 ;; Tracked objects:
  1350 ;;		On entry : 0/0
  1351 ;;		On exit  : 0/0
  1352 ;;		Unchanged: 0/0
  1353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1354 ;;      Params:         0       0       0       0       0
  1355 ;;      Locals:         0       0       0       0       0
  1356 ;;      Temps:          0       5       0       0       0
  1357 ;;      Totals:         0       5       0       0       0
  1358 ;;Total ram usage:        5 bytes
  1359 ;; Hardware stack levels used:    1
  1360 ;; Hardware stack levels required when called:    3
  1361 ;; This function calls:
  1362 ;;		_Timer_callback
  1363 ;; This function is called by:
  1364 ;;		Interrupt level 1
  1365 ;; This function uses a non-reentrant model
  1366 ;;
  1367                           
  1368                           
  1369                           ;psect for function _ISR
  1370  0236                     _ISR:	
  1371  0236                     i1l1734:	
  1372                           
  1373                           ;interrupt.c: 12:     if(INTCON &(1 << 2))
  1374  0236  1D0B               	btfss	11,2	;volatile
  1375  0237  2A39               	goto	u99_21
  1376  0238  2A3A               	goto	u99_20
  1377  0239                     u99_21:	
  1378  0239  2A45               	goto	i1l323
  1379  023A                     u99_20:	
  1380  023A                     i1l1736:	
  1381                           
  1382                           ;interrupt.c: 13:     {;interrupt.c: 14:         INTCON &= ~(1 << 2);
  1383  023A  30FB               	movlw	251
  1384  023B  00B8               	movwf	??_ISR
  1385  023C  0838               	movf	??_ISR,w
  1386  023D  058B               	andwf	11,f	;volatile
  1387  023E                     i1l1738:	
  1388                           
  1389                           ;interrupt.c: 15:         TMR0 = 100;
  1390  023E  3064               	movlw	100
  1391  023F  0081               	movwf	1	;volatile
  1392  0240                     i1l1740:	
  1393                           
  1394                           ;interrupt.c: 16:         Timer_callback();
  1395  0240  120A  118A  2218  120A  118A  	fcall	_Timer_callback
  1396  0245                     i1l323:	
  1397  0245  1283               	bcf	3,5	;RP0=0, select bank0
  1398  0246  1303               	bcf	3,6	;RP1=0, select bank0
  1399  0247  083C               	movf	??_ISR+4,w
  1400  0248  00FF               	movwf	btemp+1
  1401  0249  083B               	movf	??_ISR+3,w
  1402  024A  008A               	movwf	10
  1403  024B  083A               	movf	??_ISR+2,w
  1404  024C  0084               	movwf	4
  1405  024D  0E39               	swapf	(??_ISR+1)^0,w
  1406  024E  0083               	movwf	3
  1407  024F  0EFE               	swapf	btemp,f
  1408  0250  0E7E               	swapf	btemp,w
  1409  0251  0009               	retfie
  1410  0252                     __end_of_ISR:	
  1411                           
  1412                           	psect	intentry
  1413  0004                     __pintentry:	
  1414                           ;incstack = 0
  1415                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1416                           
  1417  0004                     interrupt_function:	
  1418  007E                     saved_w	set	btemp
  1419  0004  00FE               	movwf	btemp
  1420  0005  0E03               	swapf	3,w
  1421  0006  1283               	bcf	3,5	;RP0=0, select bank0
  1422  0007  1303               	bcf	3,6	;RP1=0, select bank0
  1423  0008  00B9               	movwf	??_ISR+1
  1424  0009  0804               	movf	4,w
  1425  000A  00BA               	movwf	??_ISR+2
  1426  000B  080A               	movf	10,w
  1427  000C  00BB               	movwf	??_ISR+3
  1428  000D  087F               	movf	btemp+1,w
  1429  000E  00BC               	movwf	??_ISR+4
  1430  000F  120A  118A  2A36   	ljmp	_ISR
  1431                           
  1432                           	psect	text6
  1433  0218                     __ptext6:	
  1434 ;; *************** function _Timer_callback *****************
  1435 ;; Defined at:
  1436 ;;		line 114 in file "timer.c"
  1437 ;; Parameters:    Size  Location     Type
  1438 ;;		None
  1439 ;; Auto vars:     Size  Location     Type
  1440 ;;		None
  1441 ;; Return value:  Size  Location     Type
  1442 ;;                  1    wreg      void 
  1443 ;; Registers used:
  1444 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1445 ;; Tracked objects:
  1446 ;;		On entry : 0/0
  1447 ;;		On exit  : 0/0
  1448 ;;		Unchanged: 0/0
  1449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1450 ;;      Params:         0       0       0       0       0
  1451 ;;      Locals:         0       0       0       0       0
  1452 ;;      Temps:          0       0       0       0       0
  1453 ;;      Totals:         0       0       0       0       0
  1454 ;;Total ram usage:        0 bytes
  1455 ;; Hardware stack levels used:    1
  1456 ;; Hardware stack levels required when called:    2
  1457 ;; This function calls:
  1458 ;;		_Scheduler_ActivateTask
  1459 ;; This function is called by:
  1460 ;;		_ISR
  1461 ;; This function uses a non-reentrant model
  1462 ;;
  1463                           
  1464                           
  1465                           ;psect for function _Timer_callback
  1466  0218                     _Timer_callback:	
  1467  0218                     i1l1712:	
  1468                           ;incstack = 0
  1469                           ; Regs used in _Timer_callback: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1470                           
  1471                           
  1472                           ;timer.c: 116: timer_tick++;
  1473  0218  3001               	movlw	1
  1474  0219  1283               	bcf	3,5	;RP0=0, select bank0
  1475  021A  1303               	bcf	3,6	;RP1=0, select bank0
  1476  021B  07C3               	addwf	_timer_tick,f
  1477  021C  3000               	movlw	0
  1478  021D  1803               	skipnc
  1479  021E  3001               	movlw	1
  1480  021F  07C4               	addwf	_timer_tick+1,f
  1481  0220  3000               	movlw	0
  1482  0221  1803               	skipnc
  1483  0222  3001               	movlw	1
  1484  0223  07C5               	addwf	_timer_tick+2,f
  1485  0224  3000               	movlw	0
  1486  0225  1803               	skipnc
  1487  0226  3001               	movlw	1
  1488  0227  07C6               	addwf	_timer_tick+3,f
  1489  0228                     i1l1714:	
  1490                           
  1491                           ;timer.c: 117: Scheduler_ActivateTask(1000);
  1492  0228  3000               	movlw	0
  1493  0229  00B1               	movwf	Scheduler_ActivateTask@SystemTick+3
  1494  022A  3000               	movlw	0
  1495  022B  00B0               	movwf	Scheduler_ActivateTask@SystemTick+2
  1496  022C  3003               	movlw	3
  1497  022D  00AF               	movwf	Scheduler_ActivateTask@SystemTick+1
  1498  022E  30E8               	movlw	232
  1499  022F  00AE               	movwf	Scheduler_ActivateTask@SystemTick
  1500  0230  120A  118A  20C0  120A  118A  	fcall	_Scheduler_ActivateTask
  1501  0235                     i1l311:	
  1502  0235  0008               	return
  1503  0236                     __end_of_Timer_callback:	
  1504                           
  1505                           	psect	text7
  1506  00C0                     __ptext7:	
  1507 ;; *************** function _Scheduler_ActivateTask *****************
  1508 ;; Defined at:
  1509 ;;		line 36 in file "Schedular/Scheduler.c"
  1510 ;; Parameters:    Size  Location     Type
  1511 ;;  SystemTick      4   14[BANK0 ] unsigned long 
  1512 ;; Auto vars:     Size  Location     Type
  1513 ;;  IntityIndex     1   23[BANK0 ] unsigned char 
  1514 ;;  SystemTick_L    4   19[BANK0 ] unsigned long 
  1515 ;; Return value:  Size  Location     Type
  1516 ;;                  1    wreg      void 
  1517 ;; Registers used:
  1518 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1519 ;; Tracked objects:
  1520 ;;		On entry : 0/0
  1521 ;;		On exit  : 0/0
  1522 ;;		Unchanged: 0/0
  1523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1524 ;;      Params:         0       4       0       0       0
  1525 ;;      Locals:         0       5       0       0       0
  1526 ;;      Temps:          0       1       0       0       0
  1527 ;;      Totals:         0      10       0       0       0
  1528 ;;Total ram usage:       10 bytes
  1529 ;; Hardware stack levels used:    1
  1530 ;; Hardware stack levels required when called:    1
  1531 ;; This function calls:
  1532 ;;		___bmul
  1533 ;;		___lldiv
  1534 ;;		___llmod
  1535 ;; This function is called by:
  1536 ;;		_Timer_callback
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           
  1541                           ;psect for function _Scheduler_ActivateTask
  1542  00C0                     _Scheduler_ActivateTask:	
  1543  00C0                     i1l1628:	
  1544                           ;incstack = 0
  1545                           ; Regs used in _Scheduler_ActivateTask: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1546                           
  1547                           
  1548                           ;Schedular/Scheduler.c: 36: void Scheduler_ActivateTask(uint32_t SystemTick);Schedular/S
      +                          cheduler.c: 37: {;Schedular/Scheduler.c: 38:   uint32_t SystemTick_Loc=SystemTick;
  1549  00C0  1283               	bcf	3,5	;RP0=0, select bank0
  1550  00C1  1303               	bcf	3,6	;RP1=0, select bank0
  1551  00C2  0831               	movf	Scheduler_ActivateTask@SystemTick+3,w
  1552  00C3  00B6               	movwf	Scheduler_ActivateTask@SystemTick_Loc+3
  1553  00C4  0830               	movf	Scheduler_ActivateTask@SystemTick+2,w
  1554  00C5  00B5               	movwf	Scheduler_ActivateTask@SystemTick_Loc+2
  1555  00C6  082F               	movf	Scheduler_ActivateTask@SystemTick+1,w
  1556  00C7  00B4               	movwf	Scheduler_ActivateTask@SystemTick_Loc+1
  1557  00C8  082E               	movf	Scheduler_ActivateTask@SystemTick,w
  1558  00C9  00B3               	movwf	Scheduler_ActivateTask@SystemTick_Loc
  1559  00CA                     i1l1630:	
  1560                           
  1561                           ;Schedular/Scheduler.c: 40:   for( uint8_t IntityIndex = 0 ; IntityIndex < (3U) ; Intity
      +                          Index++ )
  1562  00CA  01B7               	clrf	Scheduler_ActivateTask@IntityIndex
  1563  00CB                     i1l1636:	
  1564                           
  1565                           ;Schedular/Scheduler.c: 41:   {;Schedular/Scheduler.c: 42:     if( ( ((SystemTick_Loc)%(
      +                          Scheduler_Intitys[IntityIndex].Peroid/(20UL)))?0:1 ) )
  1566  00CB  3000               	movlw	0
  1567  00CC  00F7               	movwf	___lldiv@divisor+3
  1568  00CD  3000               	movlw	0
  1569  00CE  00F6               	movwf	___lldiv@divisor+2
  1570  00CF  3000               	movlw	0
  1571  00D0  00F5               	movwf	___lldiv@divisor+1
  1572  00D1  3014               	movlw	20
  1573  00D2  00F4               	movwf	___lldiv@divisor
  1574  00D3  3005               	movlw	5
  1575  00D4  00B2               	movwf	??_Scheduler_ActivateTask
  1576  00D5  0832               	movf	??_Scheduler_ActivateTask,w
  1577  00D6  00F0               	movwf	___bmul@multiplicand
  1578  00D7  0837               	movf	Scheduler_ActivateTask@IntityIndex,w
  1579  00D8  120A  118A  2267  120A  118A  	fcall	___bmul
  1580  00DD  3E02               	addlw	low (((_Scheduler_Intitys-__stringbase)| (0+32768)+1))
  1581  00DE  0084               	movwf	4
  1582  00DF  120A  118A  2252  120A  118A  	fcall	stringdir
  1583  00E4  00F8               	movwf	___lldiv@dividend
  1584  00E5  120A  118A  2252  120A  118A  	fcall	stringdir
  1585  00EA  00F9               	movwf	___lldiv@dividend+1
  1586  00EB  120A  118A  2252  120A  118A  	fcall	stringdir
  1587  00F0  00FA               	movwf	___lldiv@dividend+2
  1588  00F1  120A  118A  2252  120A  118A  	fcall	stringdir
  1589  00F6  00FB               	movwf	___lldiv@dividend+3
  1590  00F7  120A  118A  212E  120A  118A  	fcall	___lldiv
  1591  00FC  0877               	movf	?___lldiv+3,w
  1592  00FD  1283               	bcf	3,5	;RP0=0, select bank0
  1593  00FE  1303               	bcf	3,6	;RP1=0, select bank0
  1594  00FF  00A8               	movwf	___llmod@divisor+3
  1595  0100  0876               	movf	?___lldiv+2,w
  1596  0101  00A7               	movwf	___llmod@divisor+2
  1597  0102  0875               	movf	?___lldiv+1,w
  1598  0103  00A6               	movwf	___llmod@divisor+1
  1599  0104  0874               	movf	?___lldiv,w
  1600  0105  00A5               	movwf	___llmod@divisor
  1601  0106  0836               	movf	Scheduler_ActivateTask@SystemTick_Loc+3,w
  1602  0107  00AC               	movwf	___llmod@dividend+3
  1603  0108  0835               	movf	Scheduler_ActivateTask@SystemTick_Loc+2,w
  1604  0109  00AB               	movwf	___llmod@dividend+2
  1605  010A  0834               	movf	Scheduler_ActivateTask@SystemTick_Loc+1,w
  1606  010B  00AA               	movwf	___llmod@dividend+1
  1607  010C  0833               	movf	Scheduler_ActivateTask@SystemTick_Loc,w
  1608  010D  00A9               	movwf	___llmod@dividend
  1609  010E  120A  118A  2196  120A  118A  	fcall	___llmod
  1610  0113  1283               	bcf	3,5	;RP0=0, select bank0
  1611  0114  1303               	bcf	3,6	;RP1=0, select bank0
  1612  0115  0828               	movf	?___llmod+3,w
  1613  0116  0427               	iorwf	?___llmod+2,w
  1614  0117  0426               	iorwf	?___llmod+1,w
  1615  0118  0425               	iorwf	?___llmod,w
  1616  0119  1D03               	skipz
  1617  011A  291C               	goto	u88_21
  1618  011B  291D               	goto	u88_20
  1619  011C                     u88_21:	
  1620  011C  2923               	goto	i1l1640
  1621  011D                     u88_20:	
  1622  011D                     i1l1638:	
  1623                           
  1624                           ;Schedular/Scheduler.c: 43:     {;Schedular/Scheduler.c: 44:      Scheduler_ActivationFl
      +                          ags[IntityIndex] = 1 ;
  1625  011D  0837               	movf	Scheduler_ActivateTask@IntityIndex,w
  1626  011E  3E4A               	addlw	(low (_Scheduler_ActivationFlags| 0))& (0+255)
  1627  011F  0084               	movwf	4
  1628  0120  1383               	bcf	3,7	;select IRP bank0
  1629  0121  0180               	clrf	0
  1630  0122  0A80               	incf	0,f
  1631  0123                     i1l1640:	
  1632                           
  1633                           ;Schedular/Scheduler.c: 46:   }
  1634  0123  3001               	movlw	1
  1635  0124  00B2               	movwf	??_Scheduler_ActivateTask
  1636  0125  0832               	movf	??_Scheduler_ActivateTask,w
  1637  0126  07B7               	addwf	Scheduler_ActivateTask@IntityIndex,f
  1638  0127                     i1l1642:	
  1639  0127  3003               	movlw	3
  1640  0128  0237               	subwf	Scheduler_ActivateTask@IntityIndex,w
  1641  0129  1C03               	skipc
  1642  012A  292C               	goto	u89_21
  1643  012B  292D               	goto	u89_20
  1644  012C                     u89_21:	
  1645  012C  28CB               	goto	i1l1636
  1646  012D                     u89_20:	
  1647  012D                     i1l357:	
  1648  012D  0008               	return
  1649  012E                     __end_of_Scheduler_ActivateTask:	
  1650                           
  1651                           	psect	text8
  1652  0196                     __ptext8:	
  1653 ;; *************** function ___llmod *****************
  1654 ;; Defined at:
  1655 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\llmod.c"
  1656 ;; Parameters:    Size  Location     Type
  1657 ;;  divisor         4    5[BANK0 ] unsigned long 
  1658 ;;  dividend        4    9[BANK0 ] unsigned long 
  1659 ;; Auto vars:     Size  Location     Type
  1660 ;;  counter         1   13[BANK0 ] unsigned char 
  1661 ;; Return value:  Size  Location     Type
  1662 ;;                  4    5[BANK0 ] unsigned long 
  1663 ;; Registers used:
  1664 ;;		wreg, status,2, status,0
  1665 ;; Tracked objects:
  1666 ;;		On entry : 0/0
  1667 ;;		On exit  : 0/0
  1668 ;;		Unchanged: 0/0
  1669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1670 ;;      Params:         0       8       0       0       0
  1671 ;;      Locals:         0       1       0       0       0
  1672 ;;      Temps:          1       0       0       0       0
  1673 ;;      Totals:         1       9       0       0       0
  1674 ;;Total ram usage:       10 bytes
  1675 ;; Hardware stack levels used:    1
  1676 ;; This function calls:
  1677 ;;		Nothing
  1678 ;; This function is called by:
  1679 ;;		_Scheduler_ActivateTask
  1680 ;; This function uses a non-reentrant model
  1681 ;;
  1682                           
  1683                           
  1684                           ;psect for function ___llmod
  1685  0196                     ___llmod:	
  1686  0196                     i1l1608:	
  1687                           ;incstack = 0
  1688                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  1689                           
  1690  0196  1283               	bcf	3,5	;RP0=0, select bank0
  1691  0197  1303               	bcf	3,6	;RP1=0, select bank0
  1692  0198  0828               	movf	___llmod@divisor+3,w
  1693  0199  0427               	iorwf	___llmod@divisor+2,w
  1694  019A  0426               	iorwf	___llmod@divisor+1,w
  1695  019B  0425               	iorwf	___llmod@divisor,w
  1696  019C  1903               	skipnz
  1697  019D  299F               	goto	u82_21
  1698  019E  29A0               	goto	u82_20
  1699  019F                     u82_21:	
  1700  019F  29E3               	goto	i1l1624
  1701  01A0                     u82_20:	
  1702  01A0                     i1l1610:	
  1703  01A0  01AD               	clrf	___llmod@counter
  1704  01A1  0AAD               	incf	___llmod@counter,f
  1705  01A2  29B0               	goto	i1l1614
  1706  01A3                     i1l1612:	
  1707  01A3  3001               	movlw	1
  1708  01A4  00FD               	movwf	??___llmod
  1709  01A5                     u83_25:	
  1710  01A5  1003               	clrc
  1711  01A6  0DA5               	rlf	___llmod@divisor,f
  1712  01A7  0DA6               	rlf	___llmod@divisor+1,f
  1713  01A8  0DA7               	rlf	___llmod@divisor+2,f
  1714  01A9  0DA8               	rlf	___llmod@divisor+3,f
  1715  01AA  0BFD               	decfsz	??___llmod,f
  1716  01AB  29A5               	goto	u83_25
  1717  01AC  3001               	movlw	1
  1718  01AD  00FD               	movwf	??___llmod
  1719  01AE  087D               	movf	??___llmod,w
  1720  01AF  07AD               	addwf	___llmod@counter,f
  1721  01B0                     i1l1614:	
  1722  01B0  1FA8               	btfss	___llmod@divisor+3,7
  1723  01B1  29B3               	goto	u84_21
  1724  01B2  29B4               	goto	u84_20
  1725  01B3                     u84_21:	
  1726  01B3  29A3               	goto	i1l1612
  1727  01B4                     u84_20:	
  1728  01B4                     i1l1616:	
  1729  01B4  0828               	movf	___llmod@divisor+3,w
  1730  01B5  022C               	subwf	___llmod@dividend+3,w
  1731  01B6  1D03               	skipz
  1732  01B7  29C2               	goto	u85_25
  1733  01B8  0827               	movf	___llmod@divisor+2,w
  1734  01B9  022B               	subwf	___llmod@dividend+2,w
  1735  01BA  1D03               	skipz
  1736  01BB  29C2               	goto	u85_25
  1737  01BC  0826               	movf	___llmod@divisor+1,w
  1738  01BD  022A               	subwf	___llmod@dividend+1,w
  1739  01BE  1D03               	skipz
  1740  01BF  29C2               	goto	u85_25
  1741  01C0  0825               	movf	___llmod@divisor,w
  1742  01C1  0229               	subwf	___llmod@dividend,w
  1743  01C2                     u85_25:	
  1744  01C2  1C03               	skipc
  1745  01C3  29C5               	goto	u85_21
  1746  01C4  29C6               	goto	u85_20
  1747  01C5                     u85_21:	
  1748  01C5  29D4               	goto	i1l1620
  1749  01C6                     u85_20:	
  1750  01C6                     i1l1618:	
  1751  01C6  0825               	movf	___llmod@divisor,w
  1752  01C7  02A9               	subwf	___llmod@dividend,f
  1753  01C8  0826               	movf	___llmod@divisor+1,w
  1754  01C9  1C03               	skipc
  1755  01CA  0F26               	incfsz	___llmod@divisor+1,w
  1756  01CB  02AA               	subwf	___llmod@dividend+1,f
  1757  01CC  0827               	movf	___llmod@divisor+2,w
  1758  01CD  1C03               	skipc
  1759  01CE  0F27               	incfsz	___llmod@divisor+2,w
  1760  01CF  02AB               	subwf	___llmod@dividend+2,f
  1761  01D0  0828               	movf	___llmod@divisor+3,w
  1762  01D1  1C03               	skipc
  1763  01D2  0F28               	incfsz	___llmod@divisor+3,w
  1764  01D3  02AC               	subwf	___llmod@dividend+3,f
  1765  01D4                     i1l1620:	
  1766  01D4  3001               	movlw	1
  1767  01D5                     u86_25:	
  1768  01D5  1003               	clrc
  1769  01D6  0CA8               	rrf	___llmod@divisor+3,f
  1770  01D7  0CA7               	rrf	___llmod@divisor+2,f
  1771  01D8  0CA6               	rrf	___llmod@divisor+1,f
  1772  01D9  0CA5               	rrf	___llmod@divisor,f
  1773  01DA  3EFF               	addlw	-1
  1774  01DB  1D03               	skipz
  1775  01DC  29D5               	goto	u86_25
  1776  01DD                     i1l1622:	
  1777  01DD  3001               	movlw	1
  1778  01DE  02AD               	subwf	___llmod@counter,f
  1779  01DF  1D03               	btfss	3,2
  1780  01E0  29E2               	goto	u87_21
  1781  01E1  29E3               	goto	u87_20
  1782  01E2                     u87_21:	
  1783  01E2  29B4               	goto	i1l1616
  1784  01E3                     u87_20:	
  1785  01E3                     i1l1624:	
  1786  01E3  082C               	movf	___llmod@dividend+3,w
  1787  01E4  00A8               	movwf	?___llmod+3
  1788  01E5  082B               	movf	___llmod@dividend+2,w
  1789  01E6  00A7               	movwf	?___llmod+2
  1790  01E7  082A               	movf	___llmod@dividend+1,w
  1791  01E8  00A6               	movwf	?___llmod+1
  1792  01E9  0829               	movf	___llmod@dividend,w
  1793  01EA  00A5               	movwf	?___llmod
  1794  01EB                     i1l674:	
  1795  01EB  0008               	return
  1796  01EC                     __end_of___llmod:	
  1797                           
  1798                           	psect	text9
  1799  012E                     __ptext9:	
  1800 ;; *************** function ___lldiv *****************
  1801 ;; Defined at:
  1802 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  1803 ;; Parameters:    Size  Location     Type
  1804 ;;  divisor         4    4[COMMON] unsigned long 
  1805 ;;  dividend        4    8[COMMON] unsigned long 
  1806 ;; Auto vars:     Size  Location     Type
  1807 ;;  quotient        4    0[BANK0 ] unsigned long 
  1808 ;;  counter         1    4[BANK0 ] unsigned char 
  1809 ;; Return value:  Size  Location     Type
  1810 ;;                  4    4[COMMON] unsigned long 
  1811 ;; Registers used:
  1812 ;;		wreg, status,2, status,0
  1813 ;; Tracked objects:
  1814 ;;		On entry : 0/0
  1815 ;;		On exit  : 0/0
  1816 ;;		Unchanged: 0/0
  1817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1818 ;;      Params:         8       0       0       0       0
  1819 ;;      Locals:         0       5       0       0       0
  1820 ;;      Temps:          1       0       0       0       0
  1821 ;;      Totals:         9       5       0       0       0
  1822 ;;Total ram usage:       14 bytes
  1823 ;; Hardware stack levels used:    1
  1824 ;; This function calls:
  1825 ;;		Nothing
  1826 ;; This function is called by:
  1827 ;;		_Scheduler_ActivateTask
  1828 ;; This function uses a non-reentrant model
  1829 ;;
  1830                           
  1831                           
  1832                           ;psect for function ___lldiv
  1833  012E                     ___lldiv:	
  1834  012E                     i1l1584:	
  1835                           ;incstack = 0
  1836                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1837                           
  1838  012E  3000               	movlw	0
  1839  012F  1283               	bcf	3,5	;RP0=0, select bank0
  1840  0130  1303               	bcf	3,6	;RP1=0, select bank0
  1841  0131  00A3               	movwf	___lldiv@quotient+3
  1842  0132  3000               	movlw	0
  1843  0133  00A2               	movwf	___lldiv@quotient+2
  1844  0134  3000               	movlw	0
  1845  0135  00A1               	movwf	___lldiv@quotient+1
  1846  0136  3000               	movlw	0
  1847  0137  00A0               	movwf	___lldiv@quotient
  1848  0138  0877               	movf	___lldiv@divisor+3,w
  1849  0139  0476               	iorwf	___lldiv@divisor+2,w
  1850  013A  0475               	iorwf	___lldiv@divisor+1,w
  1851  013B  0474               	iorwf	___lldiv@divisor,w
  1852  013C  1903               	skipnz
  1853  013D  293F               	goto	u75_21
  1854  013E  2940               	goto	u75_20
  1855  013F                     u75_21:	
  1856  013F  298D               	goto	i1l1604
  1857  0140                     u75_20:	
  1858  0140                     i1l1586:	
  1859  0140  01A4               	clrf	___lldiv@counter
  1860  0141  0AA4               	incf	___lldiv@counter,f
  1861  0142  2950               	goto	i1l1590
  1862  0143                     i1l1588:	
  1863  0143  3001               	movlw	1
  1864  0144  00FC               	movwf	??___lldiv
  1865  0145                     u76_25:	
  1866  0145  1003               	clrc
  1867  0146  0DF4               	rlf	___lldiv@divisor,f
  1868  0147  0DF5               	rlf	___lldiv@divisor+1,f
  1869  0148  0DF6               	rlf	___lldiv@divisor+2,f
  1870  0149  0DF7               	rlf	___lldiv@divisor+3,f
  1871  014A  0BFC               	decfsz	??___lldiv,f
  1872  014B  2945               	goto	u76_25
  1873  014C  3001               	movlw	1
  1874  014D  00FC               	movwf	??___lldiv
  1875  014E  087C               	movf	??___lldiv,w
  1876  014F  07A4               	addwf	___lldiv@counter,f
  1877  0150                     i1l1590:	
  1878  0150  1FF7               	btfss	___lldiv@divisor+3,7
  1879  0151  2953               	goto	u77_21
  1880  0152  2954               	goto	u77_20
  1881  0153                     u77_21:	
  1882  0153  2943               	goto	i1l1588
  1883  0154                     u77_20:	
  1884  0154                     i1l1592:	
  1885  0154  3001               	movlw	1
  1886  0155  00FC               	movwf	??___lldiv
  1887  0156                     u78_25:	
  1888  0156  1003               	clrc
  1889  0157  0DA0               	rlf	___lldiv@quotient,f
  1890  0158  0DA1               	rlf	___lldiv@quotient+1,f
  1891  0159  0DA2               	rlf	___lldiv@quotient+2,f
  1892  015A  0DA3               	rlf	___lldiv@quotient+3,f
  1893  015B  0BFC               	decfsz	??___lldiv,f
  1894  015C  2956               	goto	u78_25
  1895  015D                     i1l1594:	
  1896  015D  0877               	movf	___lldiv@divisor+3,w
  1897  015E  027B               	subwf	___lldiv@dividend+3,w
  1898  015F  1D03               	skipz
  1899  0160  296B               	goto	u79_25
  1900  0161  0876               	movf	___lldiv@divisor+2,w
  1901  0162  027A               	subwf	___lldiv@dividend+2,w
  1902  0163  1D03               	skipz
  1903  0164  296B               	goto	u79_25
  1904  0165  0875               	movf	___lldiv@divisor+1,w
  1905  0166  0279               	subwf	___lldiv@dividend+1,w
  1906  0167  1D03               	skipz
  1907  0168  296B               	goto	u79_25
  1908  0169  0874               	movf	___lldiv@divisor,w
  1909  016A  0278               	subwf	___lldiv@dividend,w
  1910  016B                     u79_25:	
  1911  016B  1C03               	skipc
  1912  016C  296E               	goto	u79_21
  1913  016D  296F               	goto	u79_20
  1914  016E                     u79_21:	
  1915  016E  297E               	goto	i1l1600
  1916  016F                     u79_20:	
  1917  016F                     i1l1596:	
  1918  016F  0874               	movf	___lldiv@divisor,w
  1919  0170  02F8               	subwf	___lldiv@dividend,f
  1920  0171  0875               	movf	___lldiv@divisor+1,w
  1921  0172  1C03               	skipc
  1922  0173  0F75               	incfsz	___lldiv@divisor+1,w
  1923  0174  02F9               	subwf	___lldiv@dividend+1,f
  1924  0175  0876               	movf	___lldiv@divisor+2,w
  1925  0176  1C03               	skipc
  1926  0177  0F76               	incfsz	___lldiv@divisor+2,w
  1927  0178  02FA               	subwf	___lldiv@dividend+2,f
  1928  0179  0877               	movf	___lldiv@divisor+3,w
  1929  017A  1C03               	skipc
  1930  017B  0F77               	incfsz	___lldiv@divisor+3,w
  1931  017C  02FB               	subwf	___lldiv@dividend+3,f
  1932  017D                     i1l1598:	
  1933  017D  1420               	bsf	___lldiv@quotient,0
  1934  017E                     i1l1600:	
  1935  017E  3001               	movlw	1
  1936  017F                     u80_25:	
  1937  017F  1003               	clrc
  1938  0180  0CF7               	rrf	___lldiv@divisor+3,f
  1939  0181  0CF6               	rrf	___lldiv@divisor+2,f
  1940  0182  0CF5               	rrf	___lldiv@divisor+1,f
  1941  0183  0CF4               	rrf	___lldiv@divisor,f
  1942  0184  3EFF               	addlw	-1
  1943  0185  1D03               	skipz
  1944  0186  297F               	goto	u80_25
  1945  0187                     i1l1602:	
  1946  0187  3001               	movlw	1
  1947  0188  02A4               	subwf	___lldiv@counter,f
  1948  0189  1D03               	btfss	3,2
  1949  018A  298C               	goto	u81_21
  1950  018B  298D               	goto	u81_20
  1951  018C                     u81_21:	
  1952  018C  2954               	goto	i1l1592
  1953  018D                     u81_20:	
  1954  018D                     i1l1604:	
  1955  018D  0823               	movf	___lldiv@quotient+3,w
  1956  018E  00F7               	movwf	?___lldiv+3
  1957  018F  0822               	movf	___lldiv@quotient+2,w
  1958  0190  00F6               	movwf	?___lldiv+2
  1959  0191  0821               	movf	___lldiv@quotient+1,w
  1960  0192  00F5               	movwf	?___lldiv+1
  1961  0193  0820               	movf	___lldiv@quotient,w
  1962  0194  00F4               	movwf	?___lldiv
  1963  0195                     i1l488:	
  1964  0195  0008               	return
  1965  0196                     __end_of___lldiv:	
  1966                           
  1967                           	psect	text10
  1968  0267                     __ptext10:	
  1969 ;; *************** function ___bmul *****************
  1970 ;; Defined at:
  1971 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8.c"
  1972 ;; Parameters:    Size  Location     Type
  1973 ;;  multiplier      1    wreg     unsigned char 
  1974 ;;  multiplicand    1    0[COMMON] unsigned char 
  1975 ;; Auto vars:     Size  Location     Type
  1976 ;;  multiplier      1    3[COMMON] unsigned char 
  1977 ;;  product         1    2[COMMON] unsigned char 
  1978 ;; Return value:  Size  Location     Type
  1979 ;;                  1    wreg      unsigned char 
  1980 ;; Registers used:
  1981 ;;		wreg, status,2, status,0
  1982 ;; Tracked objects:
  1983 ;;		On entry : 0/0
  1984 ;;		On exit  : 0/0
  1985 ;;		Unchanged: 0/0
  1986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1987 ;;      Params:         1       0       0       0       0
  1988 ;;      Locals:         2       0       0       0       0
  1989 ;;      Temps:          1       0       0       0       0
  1990 ;;      Totals:         4       0       0       0       0
  1991 ;;Total ram usage:        4 bytes
  1992 ;; Hardware stack levels used:    1
  1993 ;; This function calls:
  1994 ;;		Nothing
  1995 ;; This function is called by:
  1996 ;;		_Scheduler_ActivateTask
  1997 ;;		_Scheduler_Start
  1998 ;; This function uses a non-reentrant model
  1999 ;;
  2000                           
  2001                           
  2002                           ;psect for function ___bmul
  2003  0267                     ___bmul:	
  2004                           
  2005                           ;incstack = 0
  2006                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2007                           ;___bmul@multiplier stored from wreg
  2008  0267  00F3               	movwf	___bmul@multiplier
  2009  0268                     i1l1570:	
  2010  0268  01F2               	clrf	___bmul@product
  2011  0269                     i1l1572:	
  2012  0269  1C73               	btfss	___bmul@multiplier,0
  2013  026A  2A6C               	goto	u73_21
  2014  026B  2A6D               	goto	u73_20
  2015  026C                     u73_21:	
  2016  026C  2A71               	goto	i1l1576
  2017  026D                     u73_20:	
  2018  026D                     i1l1574:	
  2019  026D  0870               	movf	___bmul@multiplicand,w
  2020  026E  00F1               	movwf	??___bmul
  2021  026F  0871               	movf	??___bmul,w
  2022  0270  07F2               	addwf	___bmul@product,f
  2023  0271                     i1l1576:	
  2024  0271  1003               	clrc
  2025  0272  0DF0               	rlf	___bmul@multiplicand,f
  2026  0273                     i1l1578:	
  2027  0273  1003               	clrc
  2028  0274  0CF3               	rrf	___bmul@multiplier,f
  2029  0275  0873               	movf	___bmul@multiplier,w
  2030  0276  1D03               	btfss	3,2
  2031  0277  2A79               	goto	u74_21
  2032  0278  2A7A               	goto	u74_20
  2033  0279                     u74_21:	
  2034  0279  2A69               	goto	i1l1572
  2035  027A                     u74_20:	
  2036  027A                     i1l1580:	
  2037  027A  0872               	movf	___bmul@product,w
  2038  027B                     i1l478:	
  2039  027B  0008               	return
  2040  027C                     __end_of___bmul:	
  2041  007E                     btemp	set	126	;btemp
  2042  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    15
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     35      45
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sp__memset	PTR void  size(1) Largest target is 3
		 -> Scheduler_ActivationFlags(BANK0[3]), 

    S232$fuction_ptr	PTR FTN()void  size(1) Largest target is 1
		 -> Scheduler_Task3(), Scheduler_Task2(), Scheduler_Task1(), 

    Scheduler_Intitys.fuction_ptr	PTR FTN()void  size(1) Largest target is 1
		 -> Scheduler_Task3(), Scheduler_Task2(), Scheduler_Task1(), 

    TWI_init@twi_init_cfg	PTR struct . size(1) Largest target is 3
		 -> main@twi_init_cfg(BANK0[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _Scheduler_ActivateTask->___llmod
    ___llmod->___lldiv
    ___lldiv->___bmul

Critical Paths under _main in BANK0

    _main->_TWI_init

Critical Paths under _ISR in BANK0

    _Timer_callback->_Scheduler_ActivateTask
    _Scheduler_ActivateTask->___llmod
    ___llmod->___lldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     241
                                             32 BANK0      3     3      0
                           _TWI_init
                          _TWI_start
                           _TWI_stop
                          _TWI_write
 ---------------------------------------------------------------------------------
 (1) _TWI_write                                            1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TWI_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TWI_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TWI_init                                             3     3      0     143
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  5     5      0     980
                                             24 BANK0      5     5      0
                     _Timer_callback
 ---------------------------------------------------------------------------------
 (3) _Timer_callback                                       0     0      0     980
             _Scheduler_ActivateTask
 ---------------------------------------------------------------------------------
 (4) _Scheduler_ActivateTask                              10     6      4     980
                                             14 BANK0     10     6      4
                             ___bmul
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (5) ___llmod                                             10     2      8     311
                                             13 COMMON     1     1      0
                                              5 BANK0      9     1      8
                             ___bmul (ARG)
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             14     6      8     314
                                              4 COMMON     9     1      8
                                              0 BANK0      5     5      0
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___bmul                                               4     3      1     144
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _TWI_init
   _TWI_start
   _TWI_stop
   _TWI_write

 _ISR (ROOT)
   _Timer_callback
     _Scheduler_ActivateTask
       ___bmul
       ___lldiv
         ___bmul (ARG)
       ___llmod
         ___bmul (ARG)
         ___lldiv (ARG)
           ___bmul (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      3B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     23      2D       5       56.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      3B      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Jul 15 04:09:34 2020

                                   pc 0002                        ___bmul@product 0072  
                         __CFG_CP$OFF 0000                                    fsr 0004  
                         __CFG_LVP$ON 0000                                   l206 00BF  
                                 l214 02AA                                   l215 02AB  
                                 l209 00BF                                   l233 028F  
                                 l226 029C                                   l227 029D  
                                 l192 003A                                   l197 005A  
                        __CFG_CPD$OFF 0000                                   _ISR 0236  
                                 u900 002D                                   u901 002C  
                                 u910 00B0                                   u911 00AF  
                                 u920 00BA                                   u921 00B9  
                                 u930 02A6                                   u931 02A5  
                                 u940 02AA                                   u941 02A9  
                                 u950 0287                                   u951 0286  
                                 u960 028B                                   u961 028A  
                                 u970 0298                                   u971 0297  
                                 u980 029C                                   u981 029B  
                                 fsr0 0004                                   indf 0000  
                        __CFG_FOSC$HS 0000                                  ?_ISR 0070  
                                l1700 027F                                  l1710 0298  
                                l1702 0287                                  l1704 028B  
                                l1720 01F5                                  l1650 003E  
                                l1706 0290                                  l1730 0209  
                                l1722 01F6                                  l1660 0069  
                                l1644 0028                                  l1708 0290  
                                l1732 020F                                  l1724 01F8  
                                l1716 01EC                                  l1830 0094  
                                l1662 0072                                  l1670 0089  
                                l1654 0045                                  l1646 002D  
                                l1726 01FE                                  l1718 01F4  
                                l1664 007B                                  l1672 00A8  
                                l1656 005B                                  l1648 0031  
                                l1728 0203                                  l1674 00B0  
                                l1666 0080                                  l1658 0060  
                                l1676 00B2                                  l1828 0052  
                                l1692 029E                                  l1678 00BA  
                                l1694 029E                                  l1696 02A6  
                                l1698 027F                                  _TMR0 0001  
                        __CFG_WRT$OFF 0000                                  _main 01EC  
            ??_Scheduler_ActivateTask 0032                                  btemp 007E  
                                start 0012                     ___bmul@multiplier 0073  
                               ??_ISR 0038                                 ?_main 0070  
                       __CFG_WDTE$OFF 0000                       __end_of___lldiv 0196  
                     __end_of___llmod 01EC                                 i1l311 0235  
                               i1l323 0245                                 i1l357 012D  
                               i1l478 027B                                 i1l488 0195  
                               i1l674 01EB                                 _PORTA 0005  
                               _PORTB 0006                                 _PORTC 0007  
                               _PORTD 0008                                 _PORTE 0009  
                               u80_25 017F                                 u73_20 026D  
                               u81_20 018D                                 u73_21 026C  
                               u81_21 018C                                 _TRISA 0085  
                               _TRISB 0086                                 _TRISC 0087  
                               _TRISD 0088                                 _TRISE 0089  
                               u74_20 027A                                 u82_20 01A0  
                               u74_21 0279                                 u82_21 019F  
                               u75_20 0140                                 u75_21 013F  
                               u83_25 01A5                                 u84_20 01B4  
                               u84_21 01B3                                 u76_25 0145  
                               u77_20 0154                                 u85_20 01C6  
                               u77_21 0153                                 u85_21 01C5  
                               u85_25 01C2                                 u78_25 0156  
                               u86_25 01D5                                 u79_20 016F  
                               u87_20 01E3                                 u79_21 016E  
                               u87_21 01E2                                 u79_25 016B  
                               u88_20 011D                                 u88_21 011C  
                               u89_20 012D                                 u89_21 012C  
                               u99_20 023A                                 u99_21 0239  
                      __CFG_BOREN$OFF 0000                                 pclath 000A  
                               status 0003                                 wtemp0 007E  
                    __end_of_TWI_init 00C0                      __end_of_TWI_stop 029E  
                     __initialization 0015                          __end_of_main 0218  
                  __size_of_TWI_start 000E                    __size_of_TWI_write 0014  
                              ??_main 0040                                _ADCON0 001F  
                              _ADCON1 009F                      ___llmod@dividend 0029  
                              _ADRESH 001E                                _ADRESL 009E  
                              i1l1600 017E                                i1l1602 0187  
                              i1l1610 01A0                                i1l1604 018D  
                              i1l1620 01D4                                i1l1612 01A3  
                              i1l1622 01DD                                i1l1614 01B0  
                              i1l1630 00CA                                i1l1616 01B4  
                              i1l1624 01E3                                i1l1608 0196  
                              i1l1640 0123                                i1l1712 0218  
                              i1l1570 0268                                i1l1618 01C6  
                              i1l1642 0127                                i1l1714 0228  
                              i1l1580 027A                                i1l1572 0269  
                              i1l1636 00CB                                i1l1628 00C0  
                              i1l1740 0240                                i1l1574 026D  
                              i1l1590 0150                                i1l1638 011D  
                              i1l1734 0236                                i1l1576 0271  
                              i1l1592 0154                                i1l1584 012E  
                              i1l1736 023A                                i1l1578 0273  
                              i1l1594 015D                                i1l1586 0140  
                              i1l1738 023E                                i1l1596 016F  
                              i1l1588 0143                                i1l1598 017D  
                              _INTCON 000B                                _SSPADD 0093  
                              _SSPCON 0014                                _SSPBUF 0013  
     __size_of_Scheduler_ActivateTask 006E                        __CFG_PWRTE$OFF 0000  
Scheduler_ActivateTask@SystemTick_Loc 0033                                ___bmul 0267  
             __size_of_Timer_callback 001E                             ??___lldiv 007C  
                           ??___llmod 007D     Scheduler_ActivateTask@IntityIndex 0037  
                              saved_w 007E      Scheduler_ActivateTask@SystemTick 002E  
             __end_of__initialization 0021                     __end_of_TWI_start 02AC  
                   __end_of_TWI_write 0290                   ___bmul@multiplicand 0070  
                      __pcstackCOMMON 0070                         TWI_write@data 003D  
              _Scheduler_ActivateTask 00C0                             ?_TWI_init 0070  
                           ?_TWI_stop 0070                            __pbssBANK0 0043  
                          __pmaintext 01EC                               ?___bmul 0070  
                          __pintentry 0004                            ??_TWI_init 003D  
                          ??_TWI_stop 003D                               _SSPCON2 0091  
                             _SSPSTAT 0094                            __stringtab 0252  
                     _Scheduler_Task1 0000                       _Scheduler_Task2 0000  
                     _Scheduler_Task3 0000                        _Timer_callback 0218  
                     __size_of___bmul 0015                               ___lldiv 012E  
                             ___llmod 0196                               __ptext1 027C  
                             __ptext2 0290                               __ptext3 029E  
                             __ptext4 0025                               __ptext5 0236  
                             __ptext6 0218                               __ptext7 00C0  
                             __ptext8 0196                               __ptext9 012E  
                        __size_of_ISR 001C                  end_of_initialization 0021  
                     ___lldiv@divisor 0074                       ___lldiv@counter 0024  
              __end_of_Timer_callback 0236                            _timer_tick 0043  
                   _Scheduler_Intitys 0258                             _TWI_start 029E  
                     ?_Timer_callback 0070                             _TWI_write 027C  
             ?_Scheduler_ActivateTask 002E                        __end_of___bmul 027C  
                 start_initialization 0015                           __end_of_ISR 0252  
                   __size_of_TWI_init 009B                     __size_of_TWI_stop 000E  
           __end_of_Scheduler_Intitys 0267                       ___llmod@divisor 0025  
                     ___llmod@counter 002D                            ?_TWI_start 0070  
                          ?_TWI_write 0070        __end_of_Scheduler_ActivateTask 012E  
                            ??___bmul 0071                             ___latbits 0002  
                       __pcstackBANK0 0020                              ?___lldiv 0074  
                            ?___llmod 0025                             __pstrings 0252  
                   interrupt_function 0004                           ??_TWI_start 003D  
                         ??_TWI_write 003D                  TWI_init@twi_init_cfg 003F  
                         __stringbase 0257                              _TWI_init 0025  
                            _TWI_stop 0290                      ??_Timer_callback 007E  
                    __size_of___lldiv 0068                      __size_of___llmod 0056  
                  __end_of__stringtab 0258                              __ptext10 0267  
                       __size_of_main 002C                              main@F931 0047  
                            intlevel1 0000                      ___lldiv@dividend 0078  
           _Scheduler_ActivationFlags 004A                             stringcode 0252  
                          _OPTION_REG 0081                      ___lldiv@quotient 0020  
                            stringdir 0252                              stringtab 0252  
                    main@twi_init_cfg 0040  
