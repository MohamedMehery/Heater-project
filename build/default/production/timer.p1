Version 4.0 HI-TECH Software Intermediate Code
"15 timer.c
[; ;timer.c: 15: void Timer_Init(timer_init_cfg_t* timer_init_cfg)
[c E30 0 1 2 3 4 5 6 7 .. ]
[n E30 . prescaler_dev_2 prescaler_dev_4 prescaler_dev_8 prescaler_dev_16 prescaler_dev_32 prescaler_dev_64 prescaler_dev_128 prescaler_dev_256  ]
"33 ./timer.h
[; ;./timer.h: 33: {
[s S1 `uc 1 `uc 1 `uc 1 `uc 1 `E30 1 ]
[n S1 . mode edge interrupt_mode channel prescaler ]
"1255 C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1255: extern volatile unsigned char OPTION_REG __attribute__((address(0x081)));
[v _OPTION_REG `Vuc ~T0 @X0 0 e@129 ]
"59
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 59: extern volatile unsigned char TMR0 __attribute__((address(0x001)));
[v _TMR0 `Vuc ~T0 @X0 0 e@1 ]
"454
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 454: extern volatile unsigned char INTCON __attribute__((address(0x00B)));
[v _INTCON `Vuc ~T0 @X0 0 e@11 ]
"95 timer.c
[; ;timer.c: 95:                                 dio_write(GPIO_A,0x10,(0));
[c E1003 0 1 2 3 4 .. ]
[n E1003 . GPIO_A GPIO_B GPIO_C GPIO_D GPIO_E  ]
"60 ./dio.h
[; ;./dio.h: 60: void dio_write(gpio_ports_t port,uint8_t pin,uint8_t value);
[v _dio_write `(v ~T0 @X0 0 ef3`E1003`uc`uc ]
"15 ./Schedular/Scheduler.h
[; ;./Schedular/Scheduler.h: 15: void Scheduler_ActivateTask(uint32_t SystemTick);
[v _Scheduler_ActivateTask `(v ~T0 @X0 0 ef1`ul ]
"54 C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 54: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"61
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 61: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"68
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 68: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"75
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 75: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"161
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 161: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"168
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 168: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"218
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 218: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"280
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 280: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"342
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 342: __asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
"404
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 404: __asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
"436
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 436: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"456
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 456: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"534
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 534: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"596
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 596: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"636
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 636: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"643
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 643: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"650
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 650: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"657
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 657: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"732
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 732: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"739
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 739: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"810
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 810: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"817
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 817: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"887
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 887: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"894
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 894: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"901
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 901: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"908
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 908: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"966
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 966: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"1061
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1061: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"1068
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1068: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"1075
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1075: __asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
"1082
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1082: __asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
"1089
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1089: __asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
"1096
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1096: __asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
"1154
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1154: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"1161
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1161: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1257
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1257: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1327
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1327: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1377
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1377: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1439
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1439: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1501
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1501: __asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
"1563
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1563: __asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
"1620
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1620: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1682
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1682: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1722
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1722: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1756
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1756: __asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
"1818
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1818: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"1825
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1825: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"1832
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1832: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"2001
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2001: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"2082
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2082: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"2089
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2089: __asm("CMCON equ 09Ch");
[; <" CMCON equ 09Ch ;# ">
"2159
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2159: __asm("CVRCON equ 09Dh");
[; <" CVRCON equ 09Dh ;# ">
"2224
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2224: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"2231
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2231: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"2290
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2290: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"2297
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2297: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"2304
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2304: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"2311
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2311: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"2318
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2318: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"2363
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2363: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
"14 timer.c
[; ;timer.c: 14: uint32_t timer_tick = 0;
[v _timer_tick `ul ~T0 @X0 1 e ]
[i _timer_tick
-> -> -> 0 `i `l `ul
]
"15
[; ;timer.c: 15: void Timer_Init(timer_init_cfg_t* timer_init_cfg)
[v _Timer_Init `(v ~T0 @X0 1 ef1`*S1 ]
"16
[; ;timer.c: 16: {
{
[e :U _Timer_Init ]
"15
[; ;timer.c: 15: void Timer_Init(timer_init_cfg_t* timer_init_cfg)
[v _timer_init_cfg `*S1 ~T0 @X0 1 r1 ]
"16
[; ;timer.c: 16: {
[f ]
"17
[; ;timer.c: 17:     if(timer_init_cfg != (0))
[e $ ! != _timer_init_cfg -> -> 0 `i `*S1 102  ]
"18
[; ;timer.c: 18:     {
{
"20
[; ;timer.c: 20:         if(timer_init_cfg -> channel == (1))
[e $ ! == -> . *U _timer_init_cfg 3 `i -> 1 `i 103  ]
"21
[; ;timer.c: 21:         {
{
"22
[; ;timer.c: 22:              if(timer_init_cfg -> mode == (1))
[e $ ! == -> . *U _timer_init_cfg 0 `i -> 1 `i 104  ]
"23
[; ;timer.c: 23:                 {
{
"24
[; ;timer.c: 24:                     OPTION_REG &=~(1 << 5);
[e =& _OPTION_REG -> ~ << -> 1 `i -> 5 `i `Vuc ]
"25
[; ;timer.c: 25:                     OPTION_REG &=~(1 << 3);
[e =& _OPTION_REG -> ~ << -> 1 `i -> 3 `i `Vuc ]
"26
[; ;timer.c: 26:                      TMR0 = 100;
[e = _TMR0 -> -> 100 `i `uc ]
"28
[; ;timer.c: 28:                     switch(timer_init_cfg ->prescaler)
[e $U 106  ]
"29
[; ;timer.c: 29:                         {
{
"30
[; ;timer.c: 30:                             case prescaler_dev_2:
[e :U 107 ]
"31
[; ;timer.c: 31:                                 OPTION_REG &= ~((1 << 0)|(1 << 1)|(1 << 2));
[e =& _OPTION_REG -> ~ | | << -> 1 `i -> 0 `i << -> 1 `i -> 1 `i << -> 1 `i -> 2 `i `Vuc ]
"32
[; ;timer.c: 32:                             break;
[e $U 105  ]
"33
[; ;timer.c: 33:                             case prescaler_dev_4:
[e :U 108 ]
"34
[; ;timer.c: 34:                                 OPTION_REG |= (1 << 0);
[e =| _OPTION_REG -> << -> 1 `i -> 0 `i `Vuc ]
"35
[; ;timer.c: 35:                                 OPTION_REG &= ~((1 << 1)|(1 << 2));
[e =& _OPTION_REG -> ~ | << -> 1 `i -> 1 `i << -> 1 `i -> 2 `i `Vuc ]
"36
[; ;timer.c: 36:                             break;
[e $U 105  ]
"37
[; ;timer.c: 37:                             case prescaler_dev_8:
[e :U 109 ]
"38
[; ;timer.c: 38:                                 OPTION_REG &=~((1<<0)|(1<<2));
[e =& _OPTION_REG -> ~ | << -> 1 `i -> 0 `i << -> 1 `i -> 2 `i `Vuc ]
"39
[; ;timer.c: 39:                                 OPTION_REG |= (1 << 1);
[e =| _OPTION_REG -> << -> 1 `i -> 1 `i `Vuc ]
"40
[; ;timer.c: 40:                             break;
[e $U 105  ]
"41
[; ;timer.c: 41:                             case prescaler_dev_16:
[e :U 110 ]
"42
[; ;timer.c: 42:                                 OPTION_REG |= ((1 << 0)|(1 << 1));
[e =| _OPTION_REG -> | << -> 1 `i -> 0 `i << -> 1 `i -> 1 `i `Vuc ]
"43
[; ;timer.c: 43:                                 OPTION_REG &=~(1<<2);
[e =& _OPTION_REG -> ~ << -> 1 `i -> 2 `i `Vuc ]
"44
[; ;timer.c: 44:                             break;
[e $U 105  ]
"45
[; ;timer.c: 45:                             case prescaler_dev_32:
[e :U 111 ]
"46
[; ;timer.c: 46:                                 OPTION_REG |= (1 << 2);
[e =| _OPTION_REG -> << -> 1 `i -> 2 `i `Vuc ]
"47
[; ;timer.c: 47:                                 OPTION_REG &=~((1 << 0)|(1 << 1));
[e =& _OPTION_REG -> ~ | << -> 1 `i -> 0 `i << -> 1 `i -> 1 `i `Vuc ]
"48
[; ;timer.c: 48:                             break;
[e $U 105  ]
"49
[; ;timer.c: 49:                             case prescaler_dev_64:
[e :U 112 ]
"50
[; ;timer.c: 50:                                 OPTION_REG |= ((1 << 2)|(1 << 0));
[e =| _OPTION_REG -> | << -> 1 `i -> 2 `i << -> 1 `i -> 0 `i `Vuc ]
"51
[; ;timer.c: 51:                                 OPTION_REG &= ~(1 << 1);
[e =& _OPTION_REG -> ~ << -> 1 `i -> 1 `i `Vuc ]
"52
[; ;timer.c: 52:                             break;
[e $U 105  ]
"53
[; ;timer.c: 53:                             case prescaler_dev_128:
[e :U 113 ]
"54
[; ;timer.c: 54:                                 OPTION_REG |= ((1 << 2)|(1 << 1));
[e =| _OPTION_REG -> | << -> 1 `i -> 2 `i << -> 1 `i -> 1 `i `Vuc ]
"55
[; ;timer.c: 55:                                 OPTION_REG &= ~(1 << 0);
[e =& _OPTION_REG -> ~ << -> 1 `i -> 0 `i `Vuc ]
"56
[; ;timer.c: 56:                             break;
[e $U 105  ]
"57
[; ;timer.c: 57:                             case prescaler_dev_256:
[e :U 114 ]
"58
[; ;timer.c: 58:                                 OPTION_REG |= ((1 << 2)|(1 << 1)|(1 << 0));
[e =| _OPTION_REG -> | | << -> 1 `i -> 2 `i << -> 1 `i -> 1 `i << -> 1 `i -> 0 `i `Vuc ]
"59
[; ;timer.c: 59:                             break;
[e $U 105  ]
"60
[; ;timer.c: 60:                             default :
[e :U 115 ]
"62
[; ;timer.c: 62:                             break;
[e $U 105  ]
"63
[; ;timer.c: 63:                         }
}
[e $U 105  ]
[e :U 106 ]
[e [\ -> . *U _timer_init_cfg 4 `ui , $ -> . `E30 0 `ui 107
 , $ -> . `E30 1 `ui 108
 , $ -> . `E30 2 `ui 109
 , $ -> . `E30 3 `ui 110
 , $ -> . `E30 4 `ui 111
 , $ -> . `E30 5 `ui 112
 , $ -> . `E30 6 `ui 113
 , $ -> . `E30 7 `ui 114
 115 ]
[e :U 105 ]
"65
[; ;timer.c: 65:                         if(timer_init_cfg ->interrupt_mode == (1))
[e $ ! == -> . *U _timer_init_cfg 2 `i -> 1 `i 116  ]
"66
[; ;timer.c: 66:                            {
{
"67
[; ;timer.c: 67:                                INTCON &=~((1 << 7)|(1 << 5));
[e =& _INTCON -> ~ | << -> 1 `i -> 7 `i << -> 1 `i -> 5 `i `Vuc ]
"68
[; ;timer.c: 68:                            }
}
[e $U 117  ]
"69
[; ;timer.c: 69:                         else if(timer_init_cfg ->interrupt_mode == (0))
[e :U 116 ]
[e $ ! == -> . *U _timer_init_cfg 2 `i -> 0 `i 118  ]
"70
[; ;timer.c: 70:                            {
{
"71
[; ;timer.c: 71:                                INTCON |=((1 << 7)|(1 << 5));
[e =| _INTCON -> | << -> 1 `i -> 7 `i << -> 1 `i -> 5 `i `Vuc ]
"72
[; ;timer.c: 72:                                if(timer_init_cfg -> edge == (1))
[e $ ! == -> . *U _timer_init_cfg 1 `i -> 1 `i 119  ]
"73
[; ;timer.c: 73:                                     {
{
"74
[; ;timer.c: 74:                                         OPTION_REG &= ~(1 << 4);
[e =& _OPTION_REG -> ~ << -> 1 `i -> 4 `i `Vuc ]
"75
[; ;timer.c: 75:                                     }
}
[e $U 120  ]
"76
[; ;timer.c: 76:                                 else if(timer_init_cfg -> edge == (0))
[e :U 119 ]
[e $ ! == -> . *U _timer_init_cfg 1 `i -> 0 `i 121  ]
"77
[; ;timer.c: 77:                                     {
{
"78
[; ;timer.c: 78:                                            OPTION_REG |= (1 << 4);
[e =| _OPTION_REG -> << -> 1 `i -> 4 `i `Vuc ]
"79
[; ;timer.c: 79:                                     }
}
[e $U 122  ]
"80
[; ;timer.c: 80:                                 else
[e :U 121 ]
"81
[; ;timer.c: 81:                                    {
{
"83
[; ;timer.c: 83:                                    }
}
[e :U 122 ]
[e :U 120 ]
"84
[; ;timer.c: 84:                                INTCON &= ~(1 << 2);
[e =& _INTCON -> ~ << -> 1 `i -> 2 `i `Vuc ]
"85
[; ;timer.c: 85:                            }
}
[e $U 123  ]
"86
[; ;timer.c: 86:                             else
[e :U 118 ]
"87
[; ;timer.c: 87:                            {
{
"89
[; ;timer.c: 89:                            }
}
[e :U 123 ]
[e :U 117 ]
"90
[; ;timer.c: 90:                         }
}
[e $U 124  ]
"91
[; ;timer.c: 91:                         else if(timer_init_cfg -> mode == (0))
[e :U 104 ]
[e $ ! == -> . *U _timer_init_cfg 0 `i -> 0 `i 125  ]
"92
[; ;timer.c: 92:                             {
{
"94
[; ;timer.c: 94:                                 OPTION_REG |=(1 << 5);
[e =| _OPTION_REG -> << -> 1 `i -> 5 `i `Vuc ]
"95
[; ;timer.c: 95:                                 dio_write(GPIO_A,0x10,(0));
[e ( _dio_write (3 , , . `E1003 0 -> -> 16 `i `uc -> -> 0 `i `uc ]
"96
[; ;timer.c: 96:                             }
}
[e $U 126  ]
"97
[; ;timer.c: 97:                         else
[e :U 125 ]
"98
[; ;timer.c: 98:                             {
{
"100
[; ;timer.c: 100:                             }
}
[e :U 126 ]
[e :U 124 ]
"101
[; ;timer.c: 101:         }
}
[e $U 127  ]
"102
[; ;timer.c: 102:         else
[e :U 103 ]
"103
[; ;timer.c: 103:         {
{
"105
[; ;timer.c: 105:         }
}
[e :U 127 ]
"106
[; ;timer.c: 106:     }
}
[e $U 128  ]
"107
[; ;timer.c: 107:     else
[e :U 102 ]
"108
[; ;timer.c: 108:     {
{
"110
[; ;timer.c: 110:     }
}
[e :U 128 ]
"112
[; ;timer.c: 112: }
[e :UE 101 ]
}
"114
[; ;timer.c: 114: void Timer_callback(void)
[v _Timer_callback `(v ~T0 @X0 1 ef ]
"115
[; ;timer.c: 115: {
{
[e :U _Timer_callback ]
[f ]
"116
[; ;timer.c: 116: timer_tick++;
[e ++ _timer_tick -> -> -> 1 `i `l `ul ]
"117
[; ;timer.c: 117: Scheduler_ActivateTask(1000);
[e ( _Scheduler_ActivateTask (1 -> -> -> 1000 `i `l `ul ]
"118
[; ;timer.c: 118: }
[e :UE 129 ]
}
